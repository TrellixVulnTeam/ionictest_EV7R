{"version":3,"sources":["../../../projects/ui-angular/src/lib/utilities/amplify-slot/amplify-slot.directive.ts","../../../projects/ui-angular/src/lib/services/custom-components.service.ts","../../../projects/ui-angular/src/lib/services/authenticator.service.ts","../../../projects/ui-angular/src/lib/components/authenticator/components/authenticator/authenticator.component.ts","../../../projects/ui-angular/src/lib/components/authenticator/components/confirm-reset-password/amplify-confirm-reset-password.component.ts","../../../projects/ui-angular/src/lib/components/authenticator/components/confirm-sign-in/confirm-sign-in.component.ts","../../../projects/ui-angular/src/lib/components/authenticator/components/confirm-sign-up/confirm-sign-up.component.ts","../../../projects/ui-angular/src/lib/components/authenticator/components/confirm-verify-user/amplify-confirm-verify-user.component.ts","../../../projects/ui-angular/src/lib/components/authenticator/components/federated-sign-in-button/federated-sign-in-button.component.ts","../../../projects/ui-angular/src/lib/components/authenticator/components/federated-sign-in/federated-sign-in.component.ts","../../../projects/ui-angular/src/lib/components/authenticator/components/force-new-password/force-new-password.component.ts","../../../projects/ui-angular/src/lib/components/authenticator/components/force-new-password/force-new-password-form-fields/force-new-password-form-fields.component.ts","../../../projects/ui-angular/src/lib/components/authenticator/components/form-field/form-field.component.ts","../../../projects/ui-angular/src/lib/components/authenticator/components/reset-password/reset-password.component.ts","../../../../../node_modules/tslib/tslib.es6.js","../../../projects/ui-angular/src/lib/components/authenticator/components/setup-totp/setup-totp.component.ts","../../../projects/ui-angular/src/lib/components/authenticator/components/sign-in/sign-in.component.ts","../../../projects/ui-angular/src/lib/components/authenticator/components/sign-up/sign-up.component.ts","../../../projects/ui-angular/src/lib/components/authenticator/components/sign-up/sign-up-form-fields/sign-up-form-fields.component.ts","../../../projects/ui-angular/src/lib/common/helpers.ts","../../../projects/ui-angular/src/lib/components/authenticator/components/verify-user/verify-user.component.ts","../../../projects/ui-angular/src/lib/components/authenticator/components/base-form-fields/base-form-fields.component.ts","../../../projects/ui-angular/src/lib/primitives/button/button.component.ts","../../../projects/ui-angular/src/lib/primitives/checkbox/checkbox.component.ts","../../../projects/ui-angular/src/lib/primitives/error/error.component.ts","../../../projects/ui-angular/src/lib/primitives/password-field/password-field.component.ts","../../../projects/ui-angular/src/lib/primitives/phone-number-field/phone-number-field.component.ts","../../../projects/ui-angular/src/lib/primitives/select/select.component.ts","../../../projects/ui-angular/src/lib/primitives/tab-item/tab-item.component.ts","../../../projects/ui-angular/src/lib/primitives/tabs/tabs.component.ts","../../../projects/ui-angular/src/lib/primitives/text-field/text-field.component.ts","../../../projects/ui-angular/src/lib/utilities/amplify-slot/amplify-slot.component.ts","../../../projects/ui-angular/src/lib/components/authenticator/authenticator.module.ts"],"names":["AmplifySlotDirective","template","this","Object","defineProperty","prototype","set","component","name","type","Directive","args","selector","TemplateRef","Input","CustomComponentsService","_customComponents","get","customComponents","assign","Injectable","providedIn","logger","Logger","AuthenticatorService","_this","machine","createAuthenticatorMachine","authService","interpret","start","_machineSubscription","subscribe","state","_authState","_facade","getServiceContextFacade","_sendEventAliases","getSendEventAliases","send","_authService","ngOnDestroy","unsubscribe","translate","_a","error","hasValidationErrors","isPending","route","authStatus","user","validationErrors","codeDeliveryDetails","updateForm","updateBlur","resendCode","signOut","submitForm","toFederatedSignIn","toResetPassword","toSignIn","toSignUp","skipVerification","context","slotContext","$implicit","callback","event","AuthenticatorComponent","authenticator","contextService","changeDetector","customComponentQuery","signInTitle","signUpTitle","hasInitialized","isHandlingHubEvent","ngOnInit","initialState","loginMechanisms","services","signUpAttributes","socialProviders","formFields","unsubscribeHub","listenToAuthHub","data","service","defaultAuthHubHandler","detectChanges","unsubscribeMachine","ngAfterContentInit","mapCustomComponents","onTabChange","hasTabs","hasRouteComponent","componentQuery","forEach","Component","providers","encapsulation","ViewEncapsulation","None","ChangeDetectorRef","ContentChildren","ConfirmResetPasswordComponent","dataAttr","headerText","backToSignInText","resendCodeText","submitText","hasTranslation","onInput","preventDefault","target","value","onSubmit","getFormDataFromEvent","HostBinding","ConfirmSignInComponent","confirmText","setHeaderText","authState","challengeName","getActorContext","AuthChallengeNames","SOFTWARE_TOKEN_MFA","SMS_MFA","ConfirmSignUpComponent","emailMessage","textedMessage","defaultMessage","minutesMessage","DeliveryMedium","_b","Destination","ConfirmVerifyUserComponent","skipText","FederatedSignInButtonComponent","onClick","provider","FederatedSignInComponent","FederatedProviders","FederatedIdentityProviders","includeAmazon","includeApple","includeFacebook","includeGoogle","shouldShowFederatedSignIn","config","setFederatedTexts","includes","federatedText","signInAmazonText","signInAppleText","signInFacebookText","signInGoogleText","ForceNewPasswordComponent","changePasswordText","ForceNewPasswordFormFieldsComponent","FormFieldComponent","countryDialCodesValue","countryDialCodes","errorId","nanoid","getErrors","onBlur","$event","isPasswordField","formField","isPhoneField","hasError","errors","length","undefined","phrase","ResetPasswordComponent","sendCodeText","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","call","pop","push","create","SetupTotpComponent","qrCodeSource","secretKey","copyTextLabel","generateQRCode","actorContext","_g","Auth","setupTOTP","_j","issuer","_c","formOverrides","totpIssuer","username","_f","_e","_d","totpUsername","totpCode","encodeURI","info","_h","QRCode","toDataURL","err_1","copyText","navigator","clipboard","writeText","SignInComponent","forgotPasswordText","signInButtonText","SignUpComponent","createAccountText","checked","SignUpFormFieldsComponent","getAttributeMap","defaultFormFieldOptions","VerifyUserComponent","unverifiedAttributes","labelId","verifyText","actorState","getActorState","getLabelForAttr","authAttr","BaseFormFieldsComponent","display","getSortedFormFields","handleConfirmSignUp","placeholder","defaultFormFields","getDefaultFormFields","confirmation_code","customFormFields","confirmSignUp","newFormFields","applyDefaults","sortFormFields","ButtonComponent","fullWidth","isDisabled","size","variation","fontWeight","className","typeAttr","fullWidthAttr","sizeAttr","variationAttr","fontWeightAttr","getDisabled","classNames","CheckboxComponent","defaultChecked","isChecked","handleClick","ErrorComponent","isVisible","close","PasswordFieldComponent","autocomplete","disabled","fieldId","initialValue","required","labelHidden","setBlur","EventEmitter","showPassword","showPasswordButtonlabel","togglePasswordText","Output","PhoneNumberFieldComponent","selectFieldId","textFieldId","countryDialCodesValues","dialCodeList","SelectComponent","TabItemComponent","active","TabsComponent","tabChange","tabs","tab","index","id","labelledById","filter","selectTab","first","handleTabClick","emit","TextFieldComponent","AmplifySlotComponent","propService","isOverriden","overridingComponent","AmplifyAuthenticatorModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"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","sourcesContent":["import { Directive, Input, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[amplifySlot]',\n})\nexport class AmplifySlotDirective {\n  constructor(public template: TemplateRef<any>) {}\n  public name: string;\n\n  @Input() set amplifySlot(component: string) {\n    this.name = component;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CustomComponents } from '../common';\n\n/**\n * Stores and provides custom components that users provide with `amplify-slot`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomComponentsService {\n  private _customComponents: CustomComponents = {};\n\n  public get customComponents(): CustomComponents {\n    return this._customComponents;\n  }\n\n  public set customComponents(customComponents: CustomComponents) {\n    this._customComponents = { ...this._customComponents, ...customComponents };\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Logger } from '@aws-amplify/core';\nimport {\n  AuthContext,\n  AuthEvent,\n  AuthInterpreter,\n  AuthMachineState,\n  createAuthenticatorMachine,\n  getSendEventAliases,\n  getServiceContextFacade,\n  listenToAuthHub,\n} from '@aws-amplify/ui';\nimport { Event, interpret, Subscription } from 'xstate';\nimport { AuthSubscriptionCallback } from '../common';\nimport { translate } from '@aws-amplify/ui';\n\nconst logger = new Logger('state-machine');\n\n/**\n * AuthenticatorService provides access to the authenticator state and context.\n */\n@Injectable({\n  providedIn: 'root', // ensure we have a singleton service\n})\nexport class AuthenticatorService implements OnDestroy {\n  private _authState: AuthMachineState;\n  private _authService: AuthInterpreter;\n  private _sendEventAliases: ReturnType<typeof getSendEventAliases>;\n  private _machineSubscription: Subscription;\n  private _facade: ReturnType<typeof getServiceContextFacade>;\n\n  constructor() {\n    const machine = createAuthenticatorMachine();\n\n    const authService = interpret(machine).start();\n\n    this._machineSubscription = authService.subscribe((state) => {\n      this._authState = state;\n      this._facade = getServiceContextFacade(state);\n    });\n\n    this._sendEventAliases = getSendEventAliases(authService.send);\n    this._authService = authService;\n  }\n\n  ngOnDestroy(): void {\n    if (this._machineSubscription) this._machineSubscription.unsubscribe();\n  }\n\n  /**\n   * Context facades\n   */\n\n  public get error() {\n    return translate(this._facade?.error);\n  }\n\n  public get hasValidationErrors() {\n    return this._facade?.hasValidationErrors;\n  }\n\n  public get isPending() {\n    return this._facade?.isPending;\n  }\n\n  public get route() {\n    return this._facade?.route;\n  }\n\n  public get authStatus() {\n    return this._facade?.authStatus;\n  }\n\n  public get user() {\n    return this._facade?.user;\n  }\n\n  public get validationErrors() {\n    return this._facade?.validationErrors;\n  }\n\n  public get codeDeliveryDetails() {\n    return this._facade?.codeDeliveryDetails;\n  }\n\n  /**\n   * Service facades\n   */\n\n  public get updateForm() {\n    return this._sendEventAliases.updateForm;\n  }\n\n  public get updateBlur() {\n    return this._sendEventAliases.updateBlur;\n  }\n\n  public get resendCode() {\n    return this._sendEventAliases.resendCode;\n  }\n\n  public get signOut() {\n    return this._sendEventAliases.signOut;\n  }\n\n  public get submitForm() {\n    return this._sendEventAliases.submitForm;\n  }\n\n  /**\n   * Transition facades\n   */\n\n  public get toFederatedSignIn() {\n    return this._sendEventAliases.toFederatedSignIn;\n  }\n\n  public get toResetPassword() {\n    return this._sendEventAliases.toResetPassword;\n  }\n\n  public get toSignIn() {\n    return this._sendEventAliases.toSignIn;\n  }\n\n  public get toSignUp() {\n    return this._sendEventAliases.toSignUp;\n  }\n\n  public get skipVerification() {\n    return this._sendEventAliases.skipVerification;\n  }\n\n  /**\n   * Internal utility functions\n   */\n\n  /** @deprecated For internal use only */\n  public get authState(): AuthMachineState {\n    return this._authState;\n  }\n\n  /** @deprecated For internal use only */\n  public get authService(): AuthInterpreter {\n    return this._authService;\n  }\n\n  /** @deprecated For internal use only */\n  public get context(): AuthContext {\n    return this._authState.context;\n  }\n\n  /** @deprecated For internal use only */\n  public get slotContext() {\n    const slotContext = {\n      ...this._facade,\n      ...this._sendEventAliases,\n    };\n\n    return {\n      ...slotContext,\n      $implicit: { ...slotContext },\n    };\n  }\n\n  /** @deprecated For internal use only */\n  public subscribe(callback: AuthSubscriptionCallback) {\n    if (this._authService) {\n      return this._authService.subscribe(callback);\n    } else {\n      logger.error(\n        'Subscription attempted before machine was created. This is likely a bug on the library, please consider filing a bug.'\n      );\n    }\n  }\n\n  /** @deprecated For internal use only */\n  public send(event: Event<AuthEvent>) {\n    this.authService.send(event);\n  }\n}\n","import {\n  AfterContentInit,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Input,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  TemplateRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  AuthenticatorMachineOptions,\n  defaultAuthHubHandler,\n  listenToAuthHub,\n  SocialProvider,\n  translate,\n} from '@aws-amplify/ui';\nimport { AmplifySlotDirective } from '../../../../utilities/amplify-slot/amplify-slot.directive';\nimport { CustomComponentsService } from '../../../../services/custom-components.service';\nimport { AuthenticatorService } from '../../../../services/authenticator.service';\n\n@Component({\n  selector: 'amplify-authenticator',\n  templateUrl: './authenticator.component.html',\n  providers: [CustomComponentsService], // make sure custom components are scoped to this authenticator only\n  encapsulation: ViewEncapsulation.None,\n})\nexport class AuthenticatorComponent\n  implements OnInit, AfterContentInit, OnDestroy\n{\n  @Input() formFields: AuthenticatorMachineOptions['formFields'];\n  @Input() initialState: AuthenticatorMachineOptions['initialState'];\n  @Input() loginMechanisms: AuthenticatorMachineOptions['loginMechanisms'];\n  @Input() services: AuthenticatorMachineOptions['services'];\n  @Input() signUpAttributes: AuthenticatorMachineOptions['signUpAttributes'];\n  @Input() socialProviders: SocialProvider[];\n  @Input() variation: 'default' | 'modal';\n  @Input() hideSignUp: boolean;\n\n  @ContentChildren(AmplifySlotDirective)\n  private customComponentQuery: QueryList<AmplifySlotDirective> = null;\n\n  // translated texts\n  public signInTitle = translate('Sign In');\n  public signUpTitle = translate('Create Account');\n\n  private hasInitialized = false;\n  private isHandlingHubEvent = false;\n  private unsubscribeMachine: () => void;\n  private unsubscribeHub: ReturnType<typeof listenToAuthHub>;\n\n  constructor(\n    private authenticator: AuthenticatorService,\n    private contextService: CustomComponentsService,\n    private changeDetector: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    const {\n      initialState,\n      loginMechanisms,\n      services,\n      signUpAttributes,\n      socialProviders,\n      formFields,\n    } = this;\n\n    const { authService } = this.authenticator;\n\n    this.unsubscribeHub = listenToAuthHub(authService, (data, service) => {\n      defaultAuthHubHandler(data, service);\n      /**\n       * Hub events aren't properly caught by Angular, because they are\n       * synchronous events. Angular tracks async network events and\n       * html events, but not synchronous events like hub.\n       *\n       * On any notable hub events, we run change detection manually.\n       */\n      this.changeDetector.detectChanges();\n\n      /**\n       * Hub events that we handle can lead to multiple state changes:\n       * e.g. `authenticated` -> `signOut` -> initialState.\n       *\n       * We want to ensure change detection runs all the way, until\n       * we reach back to the initial state. Setting the below flag\n       * to true to until we reach initial state.\n       */\n      this.isHandlingHubEvent = true;\n    });\n\n    /**\n     * Subscribes to state machine changes and sends INIT event\n     * once machine reaches 'setup' state.\n     */\n    this.unsubscribeMachine = this.authenticator.subscribe(() => {\n      const { route } = this.authenticator;\n\n      if (this.isHandlingHubEvent) {\n        this.changeDetector.detectChanges();\n\n        const initialStateWithDefault = initialState ?? 'signIn';\n\n        // We can stop manual change detection if we're back to the initial state\n        if (route === initialStateWithDefault) {\n          this.isHandlingHubEvent = false;\n        }\n      }\n\n      if (!this.hasInitialized && route === 'setup') {\n        this.authenticator.send({\n          type: 'INIT',\n          data: {\n            initialState,\n            loginMechanisms,\n            services,\n            signUpAttributes,\n            socialProviders,\n            formFields,\n          },\n        });\n\n        this.hasInitialized = true;\n      }\n    }).unsubscribe;\n\n    /**\n     * handling translations after content init, because authenticator and its\n     * translations might be initialized before the main app's `ngOnInit` is run.\n     */\n    this.signInTitle = translate('Sign In');\n    this.signUpTitle = translate('Create Account');\n  }\n\n  /**\n   * Lifecycle Methods\n   */\n  ngAfterContentInit(): void {\n    this.contextService.customComponents = this.mapCustomComponents(\n      this.customComponentQuery\n    );\n  }\n\n  ngOnDestroy(): void {\n    if (this.unsubscribeMachine) this.unsubscribeMachine();\n    if (this.unsubscribeHub) this.unsubscribeHub();\n  }\n\n  /**\n   * Class Functions\n   */\n\n  // context passed to \"authenticated\" slot\n  public get context() {\n    return this.authenticator.slotContext;\n  }\n\n  public get route() {\n    return this.authenticator.route;\n  }\n\n  public onTabChange() {\n    const route = this.authenticator.route;\n    if (route === 'signIn') {\n      this.authenticator.toSignUp();\n    } else {\n      this.authenticator.toSignIn();\n    }\n  }\n\n  public hasTabs() {\n    const { route } = this.authenticator;\n    return route === 'signIn' || route === 'signUp';\n  }\n\n  public hasRouteComponent() {\n    const { route } = this.authenticator;\n\n    switch (route) {\n      case 'authenticated':\n      case 'idle':\n      case 'setup':\n      case 'signOut':\n      case 'autoSignIn':\n        return false;\n      default:\n        return true;\n    }\n  }\n\n  private mapCustomComponents(\n    componentQuery: QueryList<AmplifySlotDirective>\n  ): Record<string, TemplateRef<any>> {\n    if (!componentQuery) return {};\n    const customComponents: Record<string, TemplateRef<any>> = {};\n    componentQuery.forEach((component) => {\n      customComponents[component.name] = component.template;\n    });\n\n    return customComponents;\n  }\n}\n","import { Component, HostBinding, Input, OnInit } from '@angular/core';\nimport { AuthenticatorService } from '../../../../services/authenticator.service';\nimport {\n  FormFieldsArray,\n  getFormDataFromEvent,\n  hasTranslation,\n  translate,\n} from '@aws-amplify/ui';\n\n@Component({\n  selector: 'amplify-confirm-reset-password',\n  templateUrl: './amplify-confirm-reset-password.component.html',\n})\nexport class ConfirmResetPasswordComponent {\n  @HostBinding('attr.data-amplify-authenticator-confirmsignin') dataAttr = '';\n  @Input() public headerText = translate('Reset your password');\n\n  // translated strings\n  public backToSignInText = translate('Back to Sign In');\n  public resendCodeText = translate('Resend Code');\n  public sortedFormFields: FormFieldsArray;\n  /**\n   * Support backwards compatibility for erroneous 'Send Code' text\n   * See https://github.com/aws-amplify/amplify-ui/issues/1784\n   * TODO: Remove support for 'Send Code' translation in next Major release\n   */\n  public submitText = !hasTranslation('Send Code')\n    ? translate('Submit')\n    : translate('Send Code');\n\n  constructor(public authenticator: AuthenticatorService) {}\n\n  public get context() {\n    return this.authenticator.slotContext;\n  }\n\n  onInput(event: Event) {\n    event.preventDefault();\n    const { name, value } = <HTMLInputElement>event.target;\n    this.authenticator.updateForm({ name, value });\n  }\n\n  onSubmit(event: Event): void {\n    event.preventDefault();\n    this.authenticator.submitForm(getFormDataFromEvent(event));\n  }\n}\n","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { Logger } from 'aws-amplify';\nimport {\n  AuthChallengeNames,\n  FormFieldsArray,\n  getActorContext,\n  getFormDataFromEvent,\n  SignInContext,\n} from '@aws-amplify/ui';\nimport { AuthenticatorService } from '../../../../services/authenticator.service';\nimport { translate } from '@aws-amplify/ui';\n\nconst logger = new Logger('ConfirmSignIn');\n\n@Component({\n  selector: 'amplify-confirm-sign-in',\n  templateUrl: './confirm-sign-in.component.html',\n})\nexport class ConfirmSignInComponent implements OnInit {\n  @HostBinding('attr.data-amplify-authenticator-confirmsignin') dataAttr = '';\n\n  // translated texts\n  public headerText: string;\n  public confirmText = translate('Confirm');\n  public backToSignInText = translate('Back to Sign In');\n  public sortedFormFields: FormFieldsArray;\n\n  constructor(public authenticator: AuthenticatorService) {}\n\n  ngOnInit(): void {\n    this.setHeaderText();\n  }\n\n  public get context() {\n    return this.authenticator.slotContext;\n  }\n\n  setHeaderText(): void {\n    const state = this.authenticator.authState;\n    const actorContext = getActorContext(state) as SignInContext;\n    const { challengeName } = actorContext;\n    switch (challengeName) {\n      case AuthChallengeNames.SOFTWARE_TOKEN_MFA:\n        this.headerText = translate('Confirm TOTP Code');\n        break;\n      case AuthChallengeNames.SMS_MFA:\n        this.headerText = translate('Confirm SMS Code');\n        break;\n      default:\n        logger.error('Unexpected challengeName', challengeName);\n    }\n  }\n\n  onInput(event: Event): void {\n    event.preventDefault();\n    const { name, value } = <HTMLInputElement>event.target;\n    this.authenticator.updateForm({ name, value });\n  }\n\n  onSubmit(event: Event): void {\n    event.preventDefault();\n    this.authenticator.submitForm(getFormDataFromEvent(event));\n  }\n}\n","import { Component, HostBinding, Input, OnInit } from '@angular/core';\nimport { AuthenticatorService } from '../../../../services/authenticator.service';\nimport {\n  FormFieldsArray,\n  getFormDataFromEvent,\n  translate,\n} from '@aws-amplify/ui';\n@Component({\n  selector: 'amplify-confirm-sign-up',\n  templateUrl: './confirm-sign-up.component.html',\n})\nexport class ConfirmSignUpComponent {\n  @Input() headerText = translate('Confirm Sign Up');\n\n  @HostBinding('attr.data-amplify-authenticator-confirmsignup') dataAttr = '';\n\n  // translated texts\n  public resendCodeText = translate('Resend Code');\n  public confirmText = translate('Confirm');\n  public emailMessage = translate(\n    'Your code is on the way. To log in, enter the code we emailed to'\n  );\n  public textedMessage = translate(\n    'Your code is on the way. To log in, enter the code we texted to'\n  );\n  public defaultMessage = translate(\n    'Your code is on the way. To log in, enter the code we sent you. It may take a minute to arrive.'\n  );\n  public minutesMessage = translate('It may take a minute to arrive.');\n\n  public sortedFormFields: FormFieldsArray;\n\n  constructor(public authenticator: AuthenticatorService) {}\n\n  public get context() {\n    return this.authenticator.slotContext;\n  }\n\n  public get confirmSignUpHeading(): string {\n    const { codeDeliveryDetails: { DeliveryMedium } = {} } = this.authenticator;\n    return DeliveryMedium === 'EMAIL'\n      ? translate('We Emailed You')\n      : DeliveryMedium === 'SMS'\n      ? translate('We Texted You')\n      : translate('We Sent A Code');\n  }\n\n  public get subtitleText(): string {\n    const { codeDeliveryDetails: { DeliveryMedium, Destination } = {} } =\n      this.authenticator;\n    return DeliveryMedium === 'EMAIL'\n      ? `${this.emailMessage} ${Destination}. ${this.minutesMessage}`\n      : DeliveryMedium === 'SMS'\n      ? `${this.textedMessage} ${Destination}. ${this.minutesMessage}`\n      : translate(`${this.defaultMessage}`);\n  }\n\n  onInput(event: Event) {\n    event.preventDefault();\n    const { name, value } = <HTMLInputElement>event.target;\n    this.authenticator.updateForm({ name, value });\n  }\n\n  onSubmit(event: Event): void {\n    event.preventDefault();\n    this.authenticator.submitForm(getFormDataFromEvent(event));\n  }\n}\n","import { Component, HostBinding, Input } from '@angular/core';\nimport {\n  FormFieldsArray,\n  getFormDataFromEvent,\n  translate,\n} from '@aws-amplify/ui';\nimport { AuthenticatorService } from '../../../../services/authenticator.service';\n\n@Component({\n  selector: 'amplify-confirm-verify-user',\n  templateUrl: './amplify-confirm-verify-user.component.html',\n})\nexport class ConfirmVerifyUserComponent {\n  @HostBinding('attr.data-amplify-authenticator-confirmverifyuser')\n  dataAttr = '';\n  @Input() public headerText = translate(\n    'Account recovery requires verified contact information'\n  );\n\n  // translated texts\n  public skipText = translate('Skip');\n  public submitText = translate('Submit');\n  public sortedFormFields: FormFieldsArray;\n\n  constructor(public authenticator: AuthenticatorService) {}\n\n  public get context() {\n    return this.authenticator.slotContext;\n  }\n\n  onInput(event: Event) {\n    event.preventDefault();\n    const { name, value } = <HTMLInputElement>event.target;\n    this.authenticator.updateForm({ name, value });\n  }\n\n  onSubmit(event: Event): void {\n    event.preventDefault();\n    this.authenticator.submitForm(getFormDataFromEvent(event));\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { FederatedIdentityProviders } from '@aws-amplify/ui';\nimport { AuthenticatorService } from '../../../../services/authenticator.service';\n\n@Component({\n  selector: 'amplify-federated-sign-in-button',\n  templateUrl: './federated-sign-in-button.component.html',\n})\nexport class FederatedSignInButtonComponent {\n  @Input() provider: FederatedIdentityProviders;\n  @Input() text: string;\n\n  constructor(private authenticator: AuthenticatorService) {}\n\n  onClick = (): void => {\n    this.authenticator.send({\n      type: 'FEDERATED_SIGN_IN',\n      data: { provider: this.provider },\n    });\n  };\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FederatedIdentityProviders } from '@aws-amplify/ui';\nimport { AuthenticatorService } from '../../../../services/authenticator.service';\nimport { translate } from '@aws-amplify/ui';\n\n@Component({\n  selector: 'amplify-federated-sign-in',\n  templateUrl: './federated-sign-in.component.html',\n})\nexport class FederatedSignInComponent implements OnInit {\n  public FederatedProviders = FederatedIdentityProviders;\n  public includeAmazon: boolean = false;\n  public includeApple: boolean = false;\n  public includeFacebook: boolean = false;\n  public includeGoogle: boolean = false;\n  public shouldShowFederatedSignIn = false;\n\n  // translated texts\n  public signInAmazonText: string;\n  public signInAppleText: string;\n  public signInFacebookText: string;\n  public signInGoogleText: string;\n\n  constructor(private authenticator: AuthenticatorService) {}\n\n  ngOnInit(): void {\n    const { socialProviders } = this.authenticator.context?.config;\n\n    this.setFederatedTexts();\n    this.includeAmazon = socialProviders?.includes('amazon');\n    this.includeApple = socialProviders?.includes('apple');\n    this.includeGoogle = socialProviders?.includes('google');\n    this.includeFacebook = socialProviders?.includes('facebook');\n\n    this.shouldShowFederatedSignIn =\n      this.includeAmazon ||\n      this.includeApple ||\n      this.includeFacebook ||\n      this.includeGoogle;\n  }\n\n  private setFederatedTexts() {\n    const { route } = this.authenticator;\n    const federatedText = route === 'signUp' ? 'Up' : 'In';\n    this.signInAmazonText = translate<string>(\n      `Sign ${federatedText} with Amazon`\n    );\n    this.signInAppleText = translate<string>(\n      `Sign ${federatedText} with Apple`\n    );\n    this.signInFacebookText = translate<string>(\n      `Sign ${federatedText} with Facebook`\n    );\n    this.signInGoogleText = translate<string>(\n      `Sign ${federatedText} with Google`\n    );\n  }\n}\n","import { Component, HostBinding, Input } from '@angular/core';\nimport { AuthenticatorService } from '../../../../services/authenticator.service';\nimport { getFormDataFromEvent, translate } from '@aws-amplify/ui';\n\n@Component({\n  selector: 'amplify-force-new-password',\n  templateUrl: './force-new-password.component.html',\n})\nexport class ForceNewPasswordComponent {\n  @HostBinding('attr.data-amplify-authenticator-forcenewpassword')\n  dataAttr = '';\n  @Input() public headerText = translate('Change Password');\n\n  // translated texts\n  public changePasswordText = translate('Change Password');\n  public backToSignInText = translate('Back to Sign In');\n\n  constructor(public authenticator: AuthenticatorService) {}\n\n  public get context() {\n    return this.authenticator.slotContext;\n  }\n\n  onInput(event: Event) {\n    event.preventDefault();\n    const { name, value } = <HTMLInputElement>event.target;\n    this.authenticator.updateForm({ name, value });\n  }\n\n  onSubmit(event: Event): void {\n    event.preventDefault();\n    this.authenticator.submitForm(getFormDataFromEvent(event));\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'amplify-force-new-password-form-fields',\n  templateUrl: './force-new-password-form-fields.component.html',\n})\nexport class ForceNewPasswordFormFieldsComponent {}\n","import { Component, Input } from '@angular/core';\nimport {\n  translate,\n  countryDialCodes,\n  FormFieldOptions,\n  getErrors,\n} from '@aws-amplify/ui';\nimport { nanoid } from 'nanoid';\nimport { AuthenticatorService } from '../../../../services/authenticator.service';\n\n@Component({\n  selector: 'amplify-form-field',\n  templateUrl: './form-field.component.html',\n})\nexport class FormFieldComponent {\n  @Input() name: string; // name of the input field\n  @Input() formField: FormFieldOptions; // form field options for this field\n\n  public defaultCountryCodeValue: string;\n  public countryDialCodesValue = countryDialCodes;\n  public errorId = nanoid(12);\n\n  constructor(private authenticator: AuthenticatorService) {}\n\n  get errors(): string[] {\n    const { validationErrors } = this.authenticator;\n    return getErrors(validationErrors[this.name]);\n  }\n\n  public onBlur($event: Event) {\n    let { name } = <HTMLInputElement>$event.target;\n\n    this.authenticator.updateBlur({ name });\n  }\n\n  isPasswordField(): boolean {\n    return this.formField.type === 'password';\n  }\n\n  isPhoneField(): boolean {\n    return this.formField.type === 'tel';\n  }\n\n  hasError(): boolean {\n    return this.errors?.length > 0;\n  }\n\n  get ariaDescribedBy() {\n    return this.hasError() ? this.errorId : undefined;\n  }\n\n  translate(phrase: string): string {\n    return translate<string>(phrase);\n  }\n}\n","import { Component, HostBinding, Input } from '@angular/core';\nimport { AuthenticatorService } from '../../../../services/authenticator.service';\nimport {\n  FormFieldsArray,\n  getFormDataFromEvent,\n  translate,\n} from '@aws-amplify/ui';\n\n@Component({\n  selector: 'amplify-reset-password',\n  templateUrl: './reset-password.component.html',\n})\nexport class ResetPasswordComponent {\n  @HostBinding('attr.data-amplify-authenticator-resetPassword') dataAttr = '';\n  @Input() public headerText = translate('Reset your password');\n\n  // translated texts\n  public sendCodeText = translate('Send Code');\n  public backToSignInText = translate('Back to Sign In');\n  public sortedFormFields: FormFieldsArray;\n\n  constructor(public authenticator: AuthenticatorService) {}\n\n  public get context() {\n    return this.authenticator.slotContext;\n  }\n\n  onInput(event: Event) {\n    event.preventDefault();\n    const { name, value } = <HTMLInputElement>event.target;\n    this.authenticator.updateForm({ name, value });\n  }\n\n  onSubmit(event: Event): void {\n    event.preventDefault();\n    this.authenticator.submitForm(getFormDataFromEvent(event));\n  }\n}\n","/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n","import { Component, HostBinding, OnInit } from '@angular/core';\nimport QRCode from 'qrcode';\nimport { Auth, Logger } from 'aws-amplify';\nimport {\n  FormFields,\n  FormFieldsArray,\n  getActorContext,\n  getFormDataFromEvent,\n  SignInContext,\n} from '@aws-amplify/ui';\nimport { AuthenticatorService } from '../../../../services/authenticator.service';\nimport { translate } from '@aws-amplify/ui';\n\nconst logger = new Logger('SetupTotp');\n\n@Component({\n  selector: 'amplify-setup-totp',\n  templateUrl: './setup-totp.component.html',\n})\nexport class SetupTotpComponent implements OnInit {\n  @HostBinding('attr.data-amplify-authenticator-setup-totp') dataAttr = '';\n  public headerText = translate('Setup TOTP');\n  public qrCodeSource = '';\n  public secretKey = '';\n  public copyTextLabel = translate('COPY');\n\n  // translated texts\n  public backToSignInText = translate('Back to Sign In');\n  public confirmText = translate('Confirm');\n  public sortedFormFields: FormFieldsArray;\n  public formOverrides: FormFields;\n\n  constructor(public authenticator: AuthenticatorService) {}\n\n  ngOnInit(): void {\n    this.generateQRCode();\n  }\n\n  public get context() {\n    return this.authenticator.slotContext;\n  }\n\n  async generateQRCode() {\n    // TODO: This should be handled in core.\n    const state = this.authenticator.authState;\n    const actorContext = getActorContext(state) as SignInContext;\n    const { user } = actorContext;\n    try {\n      this.secretKey = await Auth.setupTOTP(user);\n      const issuer = this.formOverrides?.['QR']?.totpIssuer ?? 'AWSCognito';\n      const username =\n        this.formOverrides?.['QR']?.totpUsername ?? user.username;\n      const totpCode = encodeURI(\n        `otpauth://totp/${issuer}:${username}?secret=${this.secretKey}&issuer=${issuer}`\n      );\n\n      logger.info('totp code was generated:', totpCode);\n      this.qrCodeSource = await QRCode.toDataURL(totpCode);\n    } catch (err) {\n      logger.error(err);\n    }\n  }\n\n  onInput(event: Event) {\n    event.preventDefault();\n    const { name, value } = <HTMLInputElement>event.target;\n    this.authenticator.updateForm({ name, value });\n  }\n\n  onSubmit(event: Event): void {\n    event.preventDefault();\n    this.authenticator.submitForm(getFormDataFromEvent(event));\n  }\n\n  copyText(): void {\n    navigator.clipboard.writeText(this.secretKey);\n    this.copyTextLabel = translate('COPIED');\n  }\n}\n","import {\n  Component,\n  HostBinding,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport { AuthenticatorService } from '../../../../services/authenticator.service';\nimport {\n  translate,\n  hasTranslation,\n  getFormDataFromEvent,\n  FormFieldsArray,\n  getSortedFormFields,\n} from '@aws-amplify/ui';\n\n@Component({\n  selector: 'amplify-sign-in',\n  templateUrl: './sign-in.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SignInComponent {\n  @HostBinding('attr.data-amplify-authenticator-signin') dataAttr = '';\n\n  // translated phrases\n  // Support backwards compatibility for legacy key with trailing space\n  public forgotPasswordText = !hasTranslation('Forgot your password? ')\n    ? translate('Forgot your password?')\n    : translate('Forgot your password? ');\n  public signInButtonText = translate('Sign in');\n  public sortedFormFields: FormFieldsArray;\n\n  constructor(public authenticator: AuthenticatorService) {}\n\n  public get context() {\n    return this.authenticator.slotContext;\n  }\n\n  onInput(event: Event) {\n    event.preventDefault();\n    const { name, value } = <HTMLInputElement>event.target;\n    this.authenticator.updateForm({ name, value });\n  }\n\n  onSubmit(event: Event): void {\n    event.preventDefault();\n    this.authenticator.submitForm(getFormDataFromEvent(event));\n  }\n}\n","import { Component, HostBinding, Input } from '@angular/core';\nimport { AuthenticatorService } from '../../../../services/authenticator.service';\nimport { translate, getFormDataFromEvent } from '@aws-amplify/ui';\n\n@Component({\n  selector: 'amplify-sign-up',\n  templateUrl: './sign-up.component.html',\n})\nexport class SignUpComponent {\n  @HostBinding('attr.data-amplify-authenticator-signup') dataAttr = '';\n\n  // translated texts\n  public createAccountText = translate('Create Account');\n\n  constructor(public authenticator: AuthenticatorService) {}\n\n  public get context() {\n    return this.authenticator.slotContext;\n  }\n\n  onInput(event: Event) {\n    let { checked, name, type, value } = <HTMLInputElement>event.target;\n\n    if (type === 'checkbox' && !checked) value = undefined;\n    this.authenticator.updateForm({ name, value });\n  }\n\n  onSubmit(event: Event): void {\n    event.preventDefault();\n    this.authenticator.submitForm(getFormDataFromEvent(event));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'amplify-sign-up-form-fields',\n  templateUrl: './sign-up-form-fields.component.html',\n})\nexport class SignUpFormFieldsComponent {}\n","import { defaultFormFieldOptions } from '@aws-amplify/ui';\nimport { AttributeInfoProvider } from './types';\n\nexport const getAttributeMap: AttributeInfoProvider = () =>\n  defaultFormFieldOptions;\n","import {\n  Component,\n  HostBinding,\n  Input,\n  OnInit,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  getActorState,\n  getFormDataFromEvent,\n  SignInState,\n  translate,\n} from '@aws-amplify/ui';\nimport { AuthenticatorService } from '../../../../services/authenticator.service';\nimport { getAttributeMap } from '../../../../common';\nimport { nanoid } from 'nanoid';\n@Component({\n  selector: 'amplify-verify-user',\n  templateUrl: './verify-user.component.html',\n  encapsulation: ViewEncapsulation.None,\n})\nexport class VerifyUserComponent implements OnInit {\n  @HostBinding('attr.data-amplify-authenticator-verifyuser') dataAttr = '';\n  @Input() public headerText = translate(\n    'Account recovery requires verified contact information'\n  );\n\n  public unverifiedAttributes = {};\n  public labelId = nanoid(12);\n\n  // translated texts\n  public skipText = translate('Skip');\n  public verifyText = translate('Verify');\n\n  constructor(public authenticator: AuthenticatorService) {}\n\n  ngOnInit(): void {\n    const actorState = getActorState(\n      this.authenticator.authState\n    ) as SignInState;\n    this.unverifiedAttributes = actorState.context.unverifiedAttributes;\n  }\n\n  public get context() {\n    return this.authenticator.slotContext;\n  }\n\n  getLabelForAttr(authAttr: string): string {\n    const attributeMap = getAttributeMap();\n    const label = attributeMap[authAttr]?.label;\n    return translate<string>(label);\n  }\n\n  onInput(event: Event) {\n    event.preventDefault();\n    const { name, value } = <HTMLInputElement>event.target;\n    this.authenticator.updateForm({ name, value });\n  }\n\n  onSubmit(event: Event): void {\n    event.preventDefault();\n    this.authenticator.submitForm(getFormDataFromEvent(event));\n  }\n}\n","import { Component, HostBinding, Input, OnInit } from '@angular/core';\nimport {\n  FormFieldComponents,\n  hasTranslation,\n  translate,\n  getDefaultFormFields,\n  getActorContext,\n  FormFieldsArray,\n  getSortedFormFields,\n  applyDefaults,\n  sortFormFields,\n} from '@aws-amplify/ui';\nimport { AuthenticatorService } from '../../../../services/authenticator.service';\n\n/**\n * Sorts the given formFields, then renders them in order.\n */\n@Component({\n  selector: 'amplify-base-form-fields',\n  templateUrl: './base-form-fields.component.html',\n})\nexport class BaseFormFieldsComponent implements OnInit {\n  @Input() route: FormFieldComponents; // formFields to sort and render\n  @HostBinding('style.display') display = 'contents';\n  public formFields: FormFieldsArray = [];\n\n  constructor(private authenticator: AuthenticatorService) {}\n\n  ngOnInit(): void {\n    const state = this.authenticator.authState;\n    this.formFields = getSortedFormFields(this.route, state);\n\n    if (this.route === 'confirmSignUp') {\n      this.handleConfirmSignUp();\n    }\n  }\n\n  private handleConfirmSignUp() {\n    /**\n     * @todo(breaking): Angular `confirmSignUp` has different placholder here from other frameworks.\n     *\n     * Translating here in a backwards-compatible manner, but should be resolved in next major version.\n     */\n\n    const state = this.authenticator.authState;\n\n    // backwards compatible placeholder text\n    const placeholder = !hasTranslation('Confirmation Code')\n      ? translate('Enter your code') // prioritize new placeholder\n      : translate('Confirmation Code'); // legacy placeholder\n\n    let defaultFormFields = getDefaultFormFields(this.route, state);\n\n    if (defaultFormFields.confirmation_code.placeholder) {\n      defaultFormFields.confirmation_code.placeholder = placeholder;\n    }\n\n    const customFormFields =\n      getActorContext(state).formFields?.confirmSignUp || {};\n\n    const newFormFields = applyDefaults(defaultFormFields, customFormFields);\n    this.formFields = sortFormFields(newFormFields);\n  }\n}\n","import { Component, HostBinding, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'button[amplify-button]',\n  templateUrl: './button.component.html',\n})\nexport class ButtonComponent implements OnInit {\n  @Input() type: 'submit' | 'button' = 'button';\n  @Input() fullWidth: boolean | string = false;\n  @Input() isDisabled: boolean | string = false;\n  @Input() size: 'small' | 'medium' | 'large' = 'medium';\n  @Input() variation: 'primary' | 'default' | 'link' = 'default';\n  @Input() fontWeight: 'normal' | 'bold' | 'lighter' = 'normal';\n\n  @HostBinding('type') typeAttr: string;\n  @HostBinding('attr.data-fullwidth') fullWidthAttr: boolean | string;\n  @HostBinding('attr.data-size') sizeAttr: string;\n  @HostBinding('attr.data-variation') variationAttr: string;\n  @HostBinding('style.font-weight') fontWeightAttr: string;\n\n  @HostBinding('attr.disabled') get getDisabled() {\n    return this.isDisabled ? '' : null;\n  }\n\n  @HostBinding('class') get classNames() {\n    let className = 'amplify-button';\n    if (this.variation) {\n      className += ` amplify-button--${this.variation}`;\n    }\n    if (this.size) {\n      className += ` amplify-button--${this.size}`;\n    }\n    if (this.fullWidth) {\n      className += ` amplify-button--fullwidth`;\n    }\n    if (this.isDisabled) {\n      className += ` amplify-button--disabled amplify-button--loading`;\n    }\n\n    return className;\n  }\n\n  ngOnInit() {\n    this.typeAttr = this.type;\n    this.fullWidthAttr = this.fullWidth;\n    this.sizeAttr = this.size;\n    this.variationAttr = this.variation;\n    this.fontWeightAttr = this.fontWeight;\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'amplify-checkbox',\n  templateUrl: './checkbox.component.html',\n})\nexport class CheckboxComponent implements OnInit {\n  @Input() defaultChecked: boolean = false;\n  @Input() errorMessage: string;\n  @Input() hasError: boolean = false;\n  @Input() label: string;\n  @Input() name: string;\n  @Input() value: string;\n\n  public isChecked: boolean = false;\n\n  ngOnInit() {\n    if (this.defaultChecked) {\n      this.isChecked = true;\n    }\n  }\n\n  handleClick() {\n    this.isChecked = !this.isChecked;\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'amplify-error',\n  templateUrl: './error.component.html',\n})\nexport class ErrorComponent {\n  public isVisible = true;\n\n  public close() {\n    this.isVisible = false;\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { translate } from '@aws-amplify/ui';\nimport { nanoid } from 'nanoid';\n\n@Component({\n  selector: 'amplify-password-field',\n  templateUrl: './password-field.component.html',\n})\nexport class PasswordFieldComponent {\n  @Input() autocomplete = 'new-password';\n  @Input() disabled = false;\n  @Input() fieldId: string = `amplify-field-${nanoid(12)}`;\n  @Input() initialValue = '';\n  @Input() label = '';\n  @Input() name: string;\n  @Input() placeholder = '';\n  @Input() required = true;\n  @Input() labelHidden = false;\n  @Input() hasError: boolean;\n  @Input() describedBy: string;\n  @Output() setBlur = new EventEmitter<Event>();\n\n  public type: 'text' | 'password' = 'password';\n\n  public showPassword = false;\n  public showPasswordButtonlabel = translate('Show password');\n\n  togglePasswordText() {\n    this.showPassword = !this.showPassword;\n    this.showPasswordButtonlabel = this.showPassword\n      ? translate('Show password')\n      : translate('Hide password');\n    this.type = this.showPassword ? 'text' : 'password';\n  }\n}\n","import { Component, HostBinding, Input, OnInit } from '@angular/core';\nimport { nanoid } from 'nanoid';\nimport { countryDialCodes } from '@aws-amplify/ui';\n\n@Component({\n  selector: 'amplify-phone-number-field',\n  templateUrl: './phone-number-field.component.html',\n})\nexport class PhoneNumberFieldComponent implements OnInit {\n  @Input() autocomplete = 'new-password';\n  @Input() disabled = false;\n  @Input() defaultCountryCode: string;\n  @Input() selectFieldId: string = `amplify-field-${nanoid(12)}`;\n  @Input() textFieldId: string = `amplify-field-${nanoid(12)}`;\n  @Input() initialValue = '';\n  @Input() label = '';\n  @Input() name: string;\n  @Input() placeholder = '';\n  @Input() required = true;\n  @Input() type: string;\n  @Input() labelHidden = false;\n  @Input() dialCodeList: Array<string>;\n  @Input() hasError: boolean;\n  @Input() describedBy: string;\n\n  @HostBinding('style.display') display = 'contents';\n\n  public countryDialCodesValues: Array<string>;\n\n  ngOnInit(): void {\n    this.countryDialCodesValues = this.dialCodeList ?? countryDialCodes;\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'amplify-form-select',\n  templateUrl: './select.component.html',\n})\nexport class SelectComponent {\n  @Input() items: string[];\n  @Input() name: string;\n  @Input() label: string;\n  @Input() id: string;\n  @Input() defaultValue: string;\n}\n","import { Component, HostBinding, Input } from '@angular/core';\n\n@Component({\n  selector: 'amplify-tab-item',\n  templateUrl: './tab-item.component.html',\n})\nexport class TabItemComponent {\n  @Input() title: string;\n  @Input() active = false;\n  @Input() id: string;\n  @Input() labelledById: string;\n  @Input() tabIndex: number;\n  @HostBinding('style.display') display = 'block'; // emulate div behavior\n}\n","import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  QueryList,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { nanoid } from 'nanoid';\nimport { TabItemComponent } from '../tab-item/tab-item.component';\n\n@Component({\n  selector: 'amplify-tabs',\n  templateUrl: './tabs.component.html',\n})\nexport class TabsComponent implements AfterContentInit {\n  @ContentChildren(TabItemComponent) tabs: QueryList<TabItemComponent>;\n  @Output() tabChange = new EventEmitter();\n\n  ngAfterContentInit(): void {\n    // assign ids\n    this.tabs.forEach((tab, index) => {\n      tab.id = `radix-id-${nanoid(12)}-1-content-${index}`;\n      tab.labelledById = `radix-id-${nanoid(12)}-1-trigger-${index}`;\n    });\n\n    // find active tab\n    // TODO(enhancement): more declarative way for choosing the initial tab to render\n    const activeTabs = this.tabs.filter((tab) => tab.active);\n\n    // set active tab\n    if (activeTabs.length !== 1) {\n      this.selectTab(this.tabs.first);\n    }\n  }\n\n  selectTab(tab: TabItemComponent) {\n    this.tabs.forEach((tab) => {\n      tab.active = false;\n    });\n    tab.active = true;\n  }\n\n  handleTabClick(tab: TabItemComponent) {\n    if (tab.active) return; // don't do anything if clicks the current active tab\n    this.tabChange.emit();\n    this.selectTab(tab);\n  }\n}\n","import { Component, HostBinding, Input } from '@angular/core';\nimport { nanoid } from 'nanoid';\n\n@Component({\n  selector: 'amplify-text-field',\n  templateUrl: './text-field.component.html',\n})\nexport class TextFieldComponent {\n  @Input() autocomplete = 'new-password';\n  @Input() disabled = false;\n  @Input() fieldId: string = `amplify-field-${nanoid(12)}`;\n  @Input() initialValue = '';\n  @Input() label = '';\n  @Input() name: string;\n  @Input() placeholder = '';\n  @Input() required = true;\n  @Input() type: string;\n  @Input() labelHidden = false;\n  @Input() hasError: boolean;\n  @Input() describedBy: string;\n\n  @HostBinding('style.display') display = 'contents';\n}\n","import {\n  AfterContentInit,\n  Component,\n  HostBinding,\n  Input,\n  TemplateRef,\n} from '@angular/core';\nimport { CustomComponentsService } from '../../services/custom-components.service';\n\n@Component({\n  selector: 'amplify-slot',\n  templateUrl: './amplify-slot.component.html',\n})\nexport class AmplifySlotComponent implements AfterContentInit {\n  @Input() name: string;\n  @Input() context: Record<PropertyKey, any>;\n\n  @HostBinding('style.display') display = 'contents';\n\n  public overridingComponent: TemplateRef<any>;\n  public isOverriden: boolean = false;\n\n  constructor(private propService: CustomComponentsService) {}\n\n  ngAfterContentInit(): void {\n    const customComponents = this.propService.customComponents;\n    const overridingComponent = customComponents[this.name];\n\n    if (overridingComponent) {\n      this.overridingComponent = overridingComponent;\n      this.isOverriden = true;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Note: Angular components and directives inside module files has to be imported directly.\n *\n * Related: https://github.com/ng-packagr/ng-packagr/issues/567\n */\nimport { AuthenticatorComponent } from './components/authenticator/authenticator.component';\nimport { ConfirmResetPasswordComponent } from './components/confirm-reset-password/amplify-confirm-reset-password.component';\nimport { ConfirmSignInComponent } from './components/confirm-sign-in/confirm-sign-in.component';\nimport { ConfirmSignUpComponent } from './components/confirm-sign-up/confirm-sign-up.component';\nimport { ConfirmVerifyUserComponent } from './components/confirm-verify-user/amplify-confirm-verify-user.component';\nimport { FederatedSignInButtonComponent } from './components/federated-sign-in-button/federated-sign-in-button.component';\nimport { FederatedSignInComponent } from './components/federated-sign-in/federated-sign-in.component';\nimport { ForceNewPasswordComponent } from './components/force-new-password/force-new-password.component';\nimport { ForceNewPasswordFormFieldsComponent } from './components/force-new-password/force-new-password-form-fields/force-new-password-form-fields.component';\nimport { FormFieldComponent } from './components/form-field/form-field.component';\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\nimport { SetupTotpComponent } from './components/setup-totp/setup-totp.component';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { SignUpFormFieldsComponent } from './components/sign-up/sign-up-form-fields/sign-up-form-fields.component';\nimport { VerifyUserComponent } from './components/verify-user/verify-user.component';\nimport { BaseFormFieldsComponent } from './components/base-form-fields/base-form-fields.component';\n\nimport { ButtonComponent } from '../../primitives/button/button.component';\nimport { CheckboxComponent } from '../../primitives/checkbox/checkbox.component';\nimport { ErrorComponent } from '../../primitives/error/error.component';\nimport { PasswordFieldComponent } from '../../primitives/password-field/password-field.component';\nimport { PhoneNumberFieldComponent } from '../../primitives/phone-number-field/phone-number-field.component';\nimport { SelectComponent } from '../../primitives/select/select.component';\nimport { TabItemComponent } from '../../primitives/tab-item/tab-item.component';\nimport { TabsComponent } from '../../primitives/tabs/tabs.component';\nimport { TextFieldComponent } from '../../primitives/text-field/text-field.component';\n\nimport { AmplifySlotComponent } from '../../utilities/amplify-slot/amplify-slot.component';\nimport { AmplifySlotDirective } from '../../utilities/amplify-slot/amplify-slot.directive';\n\n@NgModule({\n  declarations: [\n    AmplifySlotComponent,\n    AmplifySlotDirective,\n    AuthenticatorComponent,\n    BaseFormFieldsComponent,\n    ButtonComponent,\n    CheckboxComponent,\n    ConfirmResetPasswordComponent,\n    ConfirmSignInComponent,\n    ConfirmSignUpComponent,\n    ConfirmVerifyUserComponent,\n    ErrorComponent,\n    FederatedSignInButtonComponent,\n    FederatedSignInComponent,\n    ForceNewPasswordComponent,\n    ForceNewPasswordFormFieldsComponent,\n    FormFieldComponent,\n    PasswordFieldComponent,\n    PhoneNumberFieldComponent,\n    ResetPasswordComponent,\n    SelectComponent,\n    SetupTotpComponent,\n    SignInComponent,\n    SignUpComponent,\n    SignUpFormFieldsComponent,\n    TabItemComponent,\n    TabsComponent,\n    TextFieldComponent,\n    VerifyUserComponent,\n  ],\n  imports: [CommonModule],\n  exports: [\n    AmplifySlotDirective,\n    AuthenticatorComponent,\n    CheckboxComponent,\n    SignUpFormFieldsComponent,\n    ForceNewPasswordFormFieldsComponent,\n    TextFieldComponent,\n  ],\n})\nexport class AmplifyAuthenticatorModule {}\n"]}