!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/common"),require("@aws-amplify/ui"),require("@aws-amplify/core"),require("xstate"),require("aws-amplify"),require("nanoid"),require("qrcode")):"function"==typeof define&&define.amd?define("@aws-amplify/ui-angular",["exports","@angular/core","@angular/common","@aws-amplify/ui","@aws-amplify/core","xstate","aws-amplify","nanoid","qrcode"],e):e(((t="undefined"!=typeof globalThis?globalThis:t||self)["aws-amplify"]=t["aws-amplify"]||{},t["aws-amplify"]["ui-angular"]={}),t.ng.core,t.ng.common,t.ui,t.core,t.xstate,t["aws-amplify"],t.nanoid,t.QRCode)}(this,(function(t,e,n,i,a,o,r,s,l){"use strict";function p(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}function u(t){if(t&&t.__esModule)return t;var e=Object.create(null);return t&&Object.keys(t).forEach((function(n){if("default"!==n){var i=Object.getOwnPropertyDescriptor(t,n);Object.defineProperty(e,n,i.get?i:{enumerable:!0,get:function(){return t[n]}})}})),e.default=t,Object.freeze(e)}var c=u(e),d=p(l),f=function(){function t(t){this.template=t}return Object.defineProperty(t.prototype,"amplifySlot",{set:function(t){this.name=t},enumerable:!1,configurable:!0}),t}();f.decorators=[{type:e.Directive,args:[{selector:"[amplifySlot]"}]}],f.ctorParameters=function(){return[{type:e.TemplateRef}]},f.propDecorators={amplifySlot:[{type:e.Input}]};var m=function(){function t(){this._customComponents={}}return Object.defineProperty(t.prototype,"customComponents",{get:function(){return this._customComponents},set:function(t){this._customComponents=Object.assign(Object.assign({},this._customComponents),t)},enumerable:!1,configurable:!0}),t}();m.ɵprov=c.ɵɵdefineInjectable({factory:function(){return new m},token:m,providedIn:"root"}),m.decorators=[{type:e.Injectable,args:[{providedIn:"root"}]}];var y=new a.Logger("state-machine"),h=function(){function t(){var t=this,e=i.createAuthenticatorMachine(),n=o.interpret(e).start();this._machineSubscription=n.subscribe((function(e){t._authState=e,t._facade=i.getServiceContextFacade(e)})),this._sendEventAliases=i.getSendEventAliases(n.send),this._authService=n}return t.prototype.ngOnDestroy=function(){this._machineSubscription&&this._machineSubscription.unsubscribe()},Object.defineProperty(t.prototype,"error",{get:function(){var t;return i.translate(null===(t=this._facade)||void 0===t?void 0:t.error)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"hasValidationErrors",{get:function(){var t;return null===(t=this._facade)||void 0===t?void 0:t.hasValidationErrors},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"isPending",{get:function(){var t;return null===(t=this._facade)||void 0===t?void 0:t.isPending},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"route",{get:function(){var t;return null===(t=this._facade)||void 0===t?void 0:t.route},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"authStatus",{get:function(){var t;return null===(t=this._facade)||void 0===t?void 0:t.authStatus},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"user",{get:function(){var t;return null===(t=this._facade)||void 0===t?void 0:t.user},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"validationErrors",{get:function(){var t;return null===(t=this._facade)||void 0===t?void 0:t.validationErrors},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"codeDeliveryDetails",{get:function(){var t;return null===(t=this._facade)||void 0===t?void 0:t.codeDeliveryDetails},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"updateForm",{get:function(){return this._sendEventAliases.updateForm},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"updateBlur",{get:function(){return this._sendEventAliases.updateBlur},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"resendCode",{get:function(){return this._sendEventAliases.resendCode},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"signOut",{get:function(){return this._sendEventAliases.signOut},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"submitForm",{get:function(){return this._sendEventAliases.submitForm},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"toFederatedSignIn",{get:function(){return this._sendEventAliases.toFederatedSignIn},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"toResetPassword",{get:function(){return this._sendEventAliases.toResetPassword},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"toSignIn",{get:function(){return this._sendEventAliases.toSignIn},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"toSignUp",{get:function(){return this._sendEventAliases.toSignUp},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"skipVerification",{get:function(){return this._sendEventAliases.skipVerification},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"authState",{get:function(){return this._authState},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"authService",{get:function(){return this._authService},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"context",{get:function(){return this._authState.context},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"slotContext",{get:function(){var t=Object.assign(Object.assign({},this._facade),this._sendEventAliases);return Object.assign(Object.assign({},t),{$implicit:Object.assign({},t)})},enumerable:!1,configurable:!0}),t.prototype.subscribe=function(t){if(this._authService)return this._authService.subscribe(t);y.error("Subscription attempted before machine was created. This is likely a bug on the library, please consider filing a bug.")},t.prototype.send=function(t){this.authService.send(t)},t}();h.ɵprov=c.ɵɵdefineInjectable({factory:function(){return new h},token:h,providedIn:"root"}),h.decorators=[{type:e.Injectable,args:[{providedIn:"root"}]}],h.ctorParameters=function(){return[]};var g=function(){function t(t,e,n){this.authenticator=t,this.contextService=e,this.changeDetector=n,this.customComponentQuery=null,this.signInTitle=i.translate("Sign In"),this.signUpTitle=i.translate("Create Account"),this.hasInitialized=!1,this.isHandlingHubEvent=!1}return t.prototype.ngOnInit=function(){var t=this,e=this,n=e.initialState,a=e.loginMechanisms,o=e.services,r=e.signUpAttributes,s=e.socialProviders,l=e.formFields,p=this.authenticator.authService;this.unsubscribeHub=i.listenToAuthHub(p,(function(e,n){i.defaultAuthHubHandler(e,n),t.changeDetector.detectChanges(),t.isHandlingHubEvent=!0})),this.unsubscribeMachine=this.authenticator.subscribe((function(){var e=t.authenticator.route;t.isHandlingHubEvent&&(t.changeDetector.detectChanges(),e===(null!=n?n:"signIn")&&(t.isHandlingHubEvent=!1));t.hasInitialized||"setup"!==e||(t.authenticator.send({type:"INIT",data:{initialState:n,loginMechanisms:a,services:o,signUpAttributes:r,socialProviders:s,formFields:l}}),t.hasInitialized=!0)})).unsubscribe,this.signInTitle=i.translate("Sign In"),this.signUpTitle=i.translate("Create Account")},t.prototype.ngAfterContentInit=function(){this.contextService.customComponents=this.mapCustomComponents(this.customComponentQuery)},t.prototype.ngOnDestroy=function(){this.unsubscribeMachine&&this.unsubscribeMachine(),this.unsubscribeHub&&this.unsubscribeHub()},Object.defineProperty(t.prototype,"context",{get:function(){return this.authenticator.slotContext},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"route",{get:function(){return this.authenticator.route},enumerable:!1,configurable:!0}),t.prototype.onTabChange=function(){"signIn"===this.authenticator.route?this.authenticator.toSignUp():this.authenticator.toSignIn()},t.prototype.hasTabs=function(){var t=this.authenticator.route;return"signIn"===t||"signUp"===t},t.prototype.hasRouteComponent=function(){switch(this.authenticator.route){case"authenticated":case"idle":case"setup":case"signOut":case"autoSignIn":return!1;default:return!0}},t.prototype.mapCustomComponents=function(t){if(!t)return{};var e={};return t.forEach((function(t){e[t.name]=t.template})),e},t}();g.decorators=[{type:e.Component,args:[{selector:"amplify-authenticator",template:'<div\n  data-amplify-authenticator\n  [attr.data-variation]="variation"\n  *ngIf="hasRouteComponent()"\n>\n  <div data-amplify-container>\n    <amplify-slot name="header" [context]="context"></amplify-slot>\n    <div\n      data-amplify-router\n      [attr.data-amplify-router-content]="hasTabs() ? undefined : \'\'"\n    >\n      <amplify-tabs\n        (tabChange)="onTabChange()"\n        *ngIf="(route === \'signIn\' || route === \'signUp\') && !hideSignUp"\n      >\n        <amplify-tab-item\n          [title]="signInTitle"\n          [active]="route === \'signIn\'"\n          data-amplify-router-content\n        >\n          \x3c!-- signIn component --\x3e\n          <amplify-slot\n            name="sign-in"\n            [context]="context"\n            *ngIf="route === \'signIn\'"\n          >\n            <amplify-sign-in></amplify-sign-in>\n          </amplify-slot>\n        </amplify-tab-item>\n        <amplify-tab-item\n          [title]="signUpTitle"\n          [active]="route === \'signUp\'"\n          data-amplify-router-content\n        >\n          \x3c!-- signUp component --\x3e\n          <amplify-slot\n            name="sign-up"\n            [context]="context"\n            *ngIf="route === \'signUp\'"\n          >\n            <amplify-sign-up></amplify-sign-up>\n          </amplify-slot>\n        </amplify-tab-item>\n      </amplify-tabs>\n\n      <amplify-slot\n        name="sign-in"\n        [context]="context"\n        *ngIf="route === \'signIn\' && hideSignUp"\n      >\n        <amplify-sign-in></amplify-sign-in>\n      </amplify-slot>\n\n      \x3c!-- confirmSignUp content --\x3e\n      <amplify-slot\n        name="confirm-sign-up"\n        [context]="context"\n        *ngIf="route === \'confirmSignUp\'"\n      >\n        <amplify-confirm-sign-up></amplify-confirm-sign-up>\n      </amplify-slot>\n\n      \x3c!-- confirmSignIn content --\x3e\n      <amplify-slot\n        name="confirm-sign-in"\n        [context]="context"\n        *ngIf="route === \'confirmSignIn\'"\n      >\n        <amplify-confirm-sign-in></amplify-confirm-sign-in>\n      </amplify-slot>\n\n      \x3c!-- setupTotp content --\x3e\n      <amplify-slot\n        name="setup-totp"\n        [context]="context"\n        *ngIf="route === \'setupTOTP\'"\n      >\n        <amplify-setup-totp></amplify-setup-totp>\n      </amplify-slot>\n\n      \x3c!-- forceNewPassword content --\x3e\n      <amplify-slot\n        name="force-new-password"\n        [context]="context"\n        *ngIf="route === \'forceNewPassword\'"\n      >\n        <amplify-force-new-password></amplify-force-new-password>\n      </amplify-slot>\n\n      \x3c!-- resetPassword content --\x3e\n      <amplify-slot\n        name="reset-password"\n        [context]="context"\n        *ngIf="route === \'resetPassword\'"\n      >\n        <amplify-reset-password></amplify-reset-password>\n      </amplify-slot>\n\n      \x3c!-- confirmResetPassword content --\x3e\n      <amplify-slot\n        name="confirm-reset-password"\n        [context]="context"\n        *ngIf="route === \'confirmResetPassword\'"\n      >\n        <amplify-confirm-reset-password></amplify-confirm-reset-password>\n      </amplify-slot>\n\n      \x3c!-- verifyUser content --\x3e\n      <amplify-slot\n        name="verify-user"\n        [context]="context"\n        *ngIf="route === \'verifyUser\'"\n      >\n        <amplify-verify-user></amplify-verify-user>\n      </amplify-slot>\n\n      \x3c!-- confirmVerifyUser content --\x3e\n      <amplify-slot\n        name="confirm-verify-user"\n        [context]="context"\n        *ngIf="route === \'confirmVerifyUser\'"\n      >\n        <amplify-confirm-verify-user></amplify-confirm-verify-user>\n      </amplify-slot>\n    </div>\n\n    <amplify-slot name="footer" [context]="context"></amplify-slot>\n  </div>\n</div>\n\n\x3c!-- signedIn content is rendered outside authenticator so it\'s not styled by authenticator --\x3e\n<amplify-slot\n  name="authenticated"\n  [context]="context"\n  *ngIf="route === \'authenticated\'"\n>\n  <ng-content></ng-content>\n</amplify-slot>\n',providers:[m],encapsulation:e.ViewEncapsulation.None}]}],g.ctorParameters=function(){return[{type:h},{type:m},{type:e.ChangeDetectorRef}]},g.propDecorators={formFields:[{type:e.Input}],initialState:[{type:e.Input}],loginMechanisms:[{type:e.Input}],services:[{type:e.Input}],signUpAttributes:[{type:e.Input}],socialProviders:[{type:e.Input}],variation:[{type:e.Input}],hideSignUp:[{type:e.Input}],customComponentQuery:[{type:e.ContentChildren,args:[f]}]};var b=function(){function t(t){this.authenticator=t,this.dataAttr="",this.headerText=i.translate("Reset your password"),this.backToSignInText=i.translate("Back to Sign In"),this.resendCodeText=i.translate("Resend Code"),this.submitText=i.hasTranslation("Send Code")?i.translate("Send Code"):i.translate("Submit")}return Object.defineProperty(t.prototype,"context",{get:function(){return this.authenticator.slotContext},enumerable:!1,configurable:!0}),t.prototype.onInput=function(t){t.preventDefault();var e=t.target,n=e.name,i=e.value;this.authenticator.updateForm({name:n,value:i})},t.prototype.onSubmit=function(t){t.preventDefault(),this.authenticator.submitForm(i.getFormDataFromEvent(t))},t}();b.decorators=[{type:e.Component,args:[{selector:"amplify-confirm-reset-password",template:'<form data-amplify-form (submit)="onSubmit($event)" (input)="onInput($event)">\n  <fieldset\n    class="amplify-flex amplify-authenticator__column"\n    data-amplify-fieldset\n    [disabled]="authenticator.isPending"\n  >\n    <amplify-slot name="confirm-reset-password-header" [context]="context">\n      <h3 class="amplify-heading amplify-heading--3">{{ headerText }}</h3>\n    </amplify-slot>\n\n    <amplify-base-form-fields\n      route="confirmResetPassword"\n    ></amplify-base-form-fields>\n\n    <button\n      amplify-button\n      variation="primary"\n      fullWidth="true"\n      type="submit"\n      [isDisabled]="authenticator.isPending"\n    >\n      {{ submitText }}\n    </button>\n\n    <button\n      amplify-button\n      size="small"\n      variation="link"\n      fontWeight="normal"\n      fullWidth="true"\n      type="button"\n      (click)="authenticator.resendCode()"\n    >\n      {{ resendCodeText }}\n    </button>\n\n    <amplify-error *ngIf="authenticator.error">\n      {{ authenticator.error }}\n    </amplify-error>\n  </fieldset>\n  <amplify-slot name="confirm-reset-password-footer" [context]="context">\n  </amplify-slot>\n</form>\n'}]}],b.ctorParameters=function(){return[{type:h}]},b.propDecorators={dataAttr:[{type:e.HostBinding,args:["attr.data-amplify-authenticator-confirmsignin"]}],headerText:[{type:e.Input}]};var v=new r.Logger("ConfirmSignIn"),x=function(){function t(t){this.authenticator=t,this.dataAttr="",this.confirmText=i.translate("Confirm"),this.backToSignInText=i.translate("Back to Sign In")}return t.prototype.ngOnInit=function(){this.setHeaderText()},Object.defineProperty(t.prototype,"context",{get:function(){return this.authenticator.slotContext},enumerable:!1,configurable:!0}),t.prototype.setHeaderText=function(){var t=this.authenticator.authState,e=i.getActorContext(t).challengeName;switch(e){case i.AuthChallengeNames.SOFTWARE_TOKEN_MFA:this.headerText=i.translate("Confirm TOTP Code");break;case i.AuthChallengeNames.SMS_MFA:this.headerText=i.translate("Confirm SMS Code");break;default:v.error("Unexpected challengeName",e)}},t.prototype.onInput=function(t){t.preventDefault();var e=t.target,n=e.name,i=e.value;this.authenticator.updateForm({name:n,value:i})},t.prototype.onSubmit=function(t){t.preventDefault(),this.authenticator.submitForm(i.getFormDataFromEvent(t))},t}();x.decorators=[{type:e.Component,args:[{selector:"amplify-confirm-sign-in",template:'<form data-amplify-form (submit)="onSubmit($event)" (input)="onInput($event)">\n  <fieldset\n    class="amplify-flex amplify-authenticator__column"\n    data-amplify-fieldset\n    [disabled]="authenticator.isPending"\n  >\n    <amplify-slot name="confirm-sign-in-header" [context]="context">\n      <h3 class="amplify-heading amplify-heading--3">{{ headerText }}</h3>\n    </amplify-slot>\n    <amplify-base-form-fields route="confirmSignIn"></amplify-base-form-fields>\n\n    <button\n      amplify-button\n      variation="primary"\n      fullWidth="true"\n      type="submit"\n      [isDisabled]="authenticator.isPending"\n    >\n      {{ confirmText }}\n    </button>\n    <button\n      amplify-button\n      size="small"\n      variation="link"\n      fontWeight="normal"\n      fullWidth="true"\n      (click)="authenticator.toSignIn()"\n    >\n      {{ backToSignInText }}\n    </button>\n    <amplify-error *ngIf="authenticator.error">\n      {{ authenticator.error }}\n    </amplify-error>\n  </fieldset>\n  <amplify-slot\n    name="confirm-sign-in-footer"\n    [context]="context"\n  ></amplify-slot>\n</form>\n'}]}],x.ctorParameters=function(){return[{type:h}]},x.propDecorators={dataAttr:[{type:e.HostBinding,args:["attr.data-amplify-authenticator-confirmsignin"]}]};var I=function(){function t(t){this.authenticator=t,this.headerText=i.translate("Confirm Sign Up"),this.dataAttr="",this.resendCodeText=i.translate("Resend Code"),this.confirmText=i.translate("Confirm"),this.emailMessage=i.translate("Your code is on the way. To log in, enter the code we emailed to"),this.textedMessage=i.translate("Your code is on the way. To log in, enter the code we texted to"),this.defaultMessage=i.translate("Your code is on the way. To log in, enter the code we sent you. It may take a minute to arrive."),this.minutesMessage=i.translate("It may take a minute to arrive.")}return Object.defineProperty(t.prototype,"context",{get:function(){return this.authenticator.slotContext},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"confirmSignUpHeading",{get:function(){var t=this.authenticator.codeDeliveryDetails,e=(void 0===t?{}:t).DeliveryMedium;return"EMAIL"===e?i.translate("We Emailed You"):"SMS"===e?i.translate("We Texted You"):i.translate("We Sent A Code")},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"subtitleText",{get:function(){var t=this.authenticator.codeDeliveryDetails,e=void 0===t?{}:t,n=e.DeliveryMedium,a=e.Destination;return"EMAIL"===n?this.emailMessage+" "+a+". "+this.minutesMessage:"SMS"===n?this.textedMessage+" "+a+". "+this.minutesMessage:i.translate(""+this.defaultMessage)},enumerable:!1,configurable:!0}),t.prototype.onInput=function(t){t.preventDefault();var e=t.target,n=e.name,i=e.value;this.authenticator.updateForm({name:n,value:i})},t.prototype.onSubmit=function(t){t.preventDefault(),this.authenticator.submitForm(i.getFormDataFromEvent(t))},t}();I.decorators=[{type:e.Component,args:[{selector:"amplify-confirm-sign-up",template:'<ng-container>\n  <form data-amplify-form (submit)="onSubmit($event)" (input)="onInput($event)">\n    <fieldset\n      class="amplify-flex amplify-authenticator__column"\n      data-amplify-fieldset\n      [disabled]="context.isPending"\n    >\n      <amplify-slot name="confirm-sign-up-header" [context]="context">\n        <h3\n          class="amplify-heading amplify-authenticator__heading"\n          style="font-size: 1.5rem"\n        >\n          {{ confirmSignUpHeading }}\n        </h3>\n      </amplify-slot>\n      <span class="amplify-authenticator__subtitle">\n        {{ subtitleText }}\n      </span>\n      <amplify-base-form-fields\n        route="confirmSignUp"\n      ></amplify-base-form-fields>\n\n      <button\n        amplify-button\n        variation="primary"\n        fullWidth="true"\n        type="submit"\n        [isDisabled]="authenticator.isPending"\n      >\n        {{ confirmText }}\n      </button>\n      <button\n        amplify-button\n        fontWeight="normal"\n        (click)="authenticator.resendCode()"\n      >\n        {{ resendCodeText }}\n      </button>\n    </fieldset>\n\n    <amplify-error *ngIf="context.error">\n      {{ authenticator.error }}\n    </amplify-error>\n    <amplify-slot\n      name="confirm-sign-up-footer"\n      [context]="context"\n    ></amplify-slot>\n  </form>\n</ng-container>\n'}]}],I.ctorParameters=function(){return[{type:h}]},I.propDecorators={headerText:[{type:e.Input}],dataAttr:[{type:e.HostBinding,args:["attr.data-amplify-authenticator-confirmsignup"]}]};var C=function(){function t(t){this.authenticator=t,this.dataAttr="",this.headerText=i.translate("Account recovery requires verified contact information"),this.skipText=i.translate("Skip"),this.submitText=i.translate("Submit")}return Object.defineProperty(t.prototype,"context",{get:function(){return this.authenticator.slotContext},enumerable:!1,configurable:!0}),t.prototype.onInput=function(t){t.preventDefault();var e=t.target,n=e.name,i=e.value;this.authenticator.updateForm({name:n,value:i})},t.prototype.onSubmit=function(t){t.preventDefault(),this.authenticator.submitForm(i.getFormDataFromEvent(t))},t}();C.decorators=[{type:e.Component,args:[{selector:"amplify-confirm-verify-user",template:'<form data-amplify-form (input)="onInput($event)" (submit)="onSubmit($event)">\n  <fieldset\n    class="amplify-flex amplify-authenticator__column"\n    data-amplify-fieldset\n    [disabled]="authenticator.isPending"\n  >\n    <amplify-slot name="confirm-verify-user-header" [context]="context">\n      <h3 class="amplify-heading amplify-heading--3">{{ this.headerText }}</h3>\n    </amplify-slot>\n    <amplify-base-form-fields\n      route="confirmVerifyUser"\n    ></amplify-base-form-fields>\n    <button\n      amplify-button\n      variation="primary"\n      fullWidth="true"\n      type="submit"\n      [isDisabled]="authenticator.isPending"\n    >\n      {{ submitText }}\n    </button>\n\n    <button\n      amplify-button\n      size="small"\n      variation="link"\n      fontWeight="normal"\n      fullWidth="true"\n      (click)="authenticator.skipVerification()"\n    >\n      {{ skipText }}\n    </button>\n    <amplify-error *ngIf="authenticator.error">\n      {{ authenticator.error }}\n    </amplify-error>\n  </fieldset>\n  <amplify-slot name="confirm-verify-user-footer" [context]="context">\n  </amplify-slot>\n</form>\n'}]}],C.ctorParameters=function(){return[{type:h}]},C.propDecorators={dataAttr:[{type:e.HostBinding,args:["attr.data-amplify-authenticator-confirmverifyuser"]}],headerText:[{type:e.Input}]};var w=function(t){var e=this;this.authenticator=t,this.onClick=function(){e.authenticator.send({type:"FEDERATED_SIGN_IN",data:{provider:e.provider}})}};w.decorators=[{type:e.Component,args:[{selector:"amplify-federated-sign-in-button",template:'<button\n  amplify-button\n  class="amplify-field-group__control federated-sign-in-button"\n  fullWidth="true"\n  fontWeight="normal"\n  (click)="onClick()"\n>\n  <div class="amplify-flex federated-sign-in-button-row">\n    <ng-content></ng-content>\n  </div>\n</button>\n'}]}],w.ctorParameters=function(){return[{type:h}]},w.propDecorators={provider:[{type:e.Input}],text:[{type:e.Input}]};var S=function(){function t(t){this.authenticator=t,this.FederatedProviders=i.FederatedIdentityProviders,this.includeAmazon=!1,this.includeApple=!1,this.includeFacebook=!1,this.includeGoogle=!1,this.shouldShowFederatedSignIn=!1}return t.prototype.ngOnInit=function(){var t,e=(null===(t=this.authenticator.context)||void 0===t?void 0:t.config).socialProviders;this.setFederatedTexts(),this.includeAmazon=null==e?void 0:e.includes("amazon"),this.includeApple=null==e?void 0:e.includes("apple"),this.includeGoogle=null==e?void 0:e.includes("google"),this.includeFacebook=null==e?void 0:e.includes("facebook"),this.shouldShowFederatedSignIn=this.includeAmazon||this.includeApple||this.includeFacebook||this.includeGoogle},t.prototype.setFederatedTexts=function(){var t="signUp"===this.authenticator.route?"Up":"In";this.signInAmazonText=i.translate("Sign "+t+" with Amazon"),this.signInAppleText=i.translate("Sign "+t+" with Apple"),this.signInFacebookText=i.translate("Sign "+t+" with Facebook"),this.signInGoogleText=i.translate("Sign "+t+" with Google")},t}();S.decorators=[{type:e.Component,args:[{selector:"amplify-federated-sign-in",template:'<div\n  class="amplify-flex federated-sign-in-container"\n  *ngIf="shouldShowFederatedSignIn"\n  data-orientation="horizontal"\n  data-size="small"\n>\n  <amplify-federated-sign-in-button\n    *ngIf="includeAmazon"\n    [text]="signInAmazonText"\n    [provider]="FederatedProviders.Amazon"\n  >\n    <svg\n      aria-label="Amazon icon"\n      class="amplify-icon federated-sign-in-icon"\n      viewBox="0 0 248 268"\n    >\n      <path\n        d="M139.056521,147.024612 C133.548808,156.744524 124.782731,162.726926 115.087401,162.726926 C101.790721,162.726926 93.9937779,152.612964 93.9937779,137.68681 C93.9937779,108.224571 120.447551,102.879017 145.533369,102.879017 L145.533369,110.365976 C145.533369,123.831358 145.876354,135.063787 139.056521,147.024612 M207.206992,162.579655 C209.400505,165.692256 209.887066,169.437725 207.063416,171.770186 C199.996315,177.653081 187.429476,188.590967 180.513926,194.716661 L180.46208,194.621133 C178.176838,196.663031 174.862638,196.810303 172.27828,195.445057 C160.780281,185.9162 158.686473,181.494078 152.405048,172.403055 C133.405233,191.751331 119.909143,197.534719 95.309886,197.534719 C66.1281801,197.534719 43.4791563,179.599451 43.4791563,143.669212 C43.4791563,115.616003 58.6782107,96.5105248 80.4019706,87.1727225 C99.2063636,78.9096034 125.464714,77.4528107 145.533369,75.1641337 L145.533369,70.694248 C145.533369,62.4749122 146.167493,52.7510201 141.297893,45.6541312 C137.110277,39.2856386 129.018206,36.6586354 121.859376,36.6586354 C108.658413,36.6586354 96.9171331,43.4171982 94.0416364,57.4199213 C93.4593582,60.532522 91.1701278,63.5933787 88.003492,63.7406501 L54.4387473,60.1424518 C51.6150972,59.5095829 48.4484614,57.2248862 49.2740201,52.8982915 C56.9712583,12.2553679 93.7983558,0 126.732964,0 C143.587124,0 165.606011,4.47386604 178.902691,17.2148315 C195.760839,32.917146 194.149604,53.8694866 194.149604,76.6726704 L194.149604,130.542157 C194.149604,146.734049 200.87372,153.830938 207.206992,162.579655 Z M233.826346,208.038962 C230.467669,203.683255 211.550709,205.9821 203.056405,206.998432 C200.470662,207.321077 200.076227,205.042397 202.406981,203.404973 C217.475208,192.664928 242.201125,195.766353 245.081698,199.363845 C247.966255,202.981502 244.336653,228.071183 230.172839,240.049379 C228.001452,241.888455 225.929671,240.904388 226.89783,238.468418 C230.077218,230.430525 237.204944,212.418868 233.826346,208.038962 Z M126.768855,264 C74.0234043,264 42.0764048,241.955028 17.7852554,217.541992 C12.9733903,212.705982 6.71799208,206.295994 3.31151296,200.690918 C1.90227474,198.372135 5.59096074,195.021875 8.0442063,196.84375 C38.2390146,219.267578 82.1011654,239.538304 125.529506,239.538304 C154.819967,239.538304 191.046475,227.469543 220.66851,214.867659 C225.146771,212.966167 225.146771,219.180222 224.511585,221.060516 C224.183264,222.03242 209.514625,236.221149 189.247207,247.047411 C170.304273,257.166172 146.397132,264 126.768855,264 Z"\n        fill="#FF9900"\n      ></path>\n    </svg>\n\n    <p class="amplify-text amplify-authenticator__federated-text">\n      {{ signInAmazonText }}\n    </p>\n  </amplify-federated-sign-in-button>\n\n  <amplify-federated-sign-in-button\n    *ngIf="includeApple"\n    [provider]="FederatedProviders.Apple"\n  >\n    <svg\n      aria-label="Apple icon"\n      class="amplify-icon federated-sign-in-icon"\n      fill="#000"\n      preserveAspectRatio="xMidYMid"\n      stroke="#000"\n      strokeWidth="0"\n      viewBox="0 0 1024 1024"\n      xmlns="http://www.w3.org/2000/svg"\n    >\n      <path\n        d="M747.4 535.7c-.4-68.2 30.5-119.6 92.9-157.5-34.9-50-87.7-77.5-157.3-82.8-65.9-5.2-138 38.4-164.4 38.4-27.9 0-91.7-36.6-141.9-36.6C273.1 298.8 163 379.8 163 544.6c0 48.7 8.9 99 26.7 150.8 23.8 68.2 109.6 235.3 199.1 232.6 46.8-1.1 79.9-33.2 140.8-33.2 59.1 0 89.7 33.2 141.9 33.2 90.3-1.3 167.9-153.2 190.5-221.6-121.1-57.1-114.6-167.2-114.6-170.7zm-105.1-305c50.7-60.2 46.1-115 44.6-134.7-44.8 2.6-96.6 30.5-126.1 64.8-32.5 36.8-51.6 82.3-47.5 133.6 48.4 3.7 92.6-21.2 129-63.7z"\n      ></path>\n    </svg>\n    <p class="amplify-text amplify-authenticator__federated-text">\n      {{ signInAppleText }}\n    </p>\n  </amplify-federated-sign-in-button>\n\n  <amplify-federated-sign-in-button\n    *ngIf="includeFacebook"\n    [text]="signInFacebookText"\n    [provider]="FederatedProviders.Facebook"\n  >\n    <svg\n      aria-label="Facebook icon"\n      class="amplify-icon federated-sign-in-icon"\n      viewBox="0 0 279 538"\n    >\n      <path\n        d="M82.3409742,538 L82.3409742,292.936652 L0,292.936652 L0,196.990154 L82.2410458,196.990154 L82.2410458,126.4295 C82.2410458,44.575144 132.205229,0 205.252865,0 C240.227794,0 270.306232,2.59855099 279,3.79788222 L279,89.2502322 L228.536175,89.2502322 C188.964542,89.2502322 181.270057,108.139699 181.270057,135.824262 L181.270057,196.89021 L276.202006,196.89021 L263.810888,292.836708 L181.16913,292.836708 L181.16913,538 L82.3409742,538 Z"\n        fill="#1877F2"\n      ></path>\n    </svg>\n    <p class="amplify-text amplify-authenticator__federated-text">\n      {{ signInFacebookText }}\n    </p>\n  </amplify-federated-sign-in-button>\n\n  <amplify-federated-sign-in-button\n    *ngIf="includeGoogle"\n    [provider]="FederatedProviders.Google"\n  >\n    <svg\n      aria-label="Google icon"\n      class="amplify-icon federated-sign-in-icon"\n      viewBox="0 0 256 262"\n      xmlns="http://www.w3.org/2000/svg"\n      preserveAspectRatio="xMidYMid"\n    >\n      <path\n        d="M255.878 133.451c0-10.734-.871-18.567-2.756-26.69H130.55v48.448h71.947c-1.45 12.04-9.283 30.172-26.69 42.356l-.244 1.622 38.755 30.023 2.685.268c24.659-22.774 38.875-56.282 38.875-96.027"\n        fill="#4285F4"\n      ></path>\n      <path\n        d="M130.55 261.1c35.248 0 64.839-11.605 86.453-31.622l-41.196-31.913c-11.024 7.688-25.82 13.055-45.257 13.055-34.523 0-63.824-22.773-74.269-54.25l-1.531.13-40.298 31.187-.527 1.465C35.393 231.798 79.49 261.1 130.55 261.1"\n        fill="#34A853"\n      ></path>\n      <path\n        d="M56.281 156.37c-2.756-8.123-4.351-16.827-4.351-25.82 0-8.994 1.595-17.697 4.206-25.82l-.073-1.73L15.26 71.312l-1.335.635C5.077 89.644 0 109.517 0 130.55s5.077 40.905 13.925 58.602l42.356-32.782"\n        fill="#FBBC05"\n      ></path>\n      <path\n        d="M130.55 50.479c24.514 0 41.05 10.589 50.479 19.438l36.844-35.974C195.245 12.91 165.798 0 130.55 0 79.49 0 35.393 29.301 13.925 71.947l42.211 32.783c10.59-31.477 39.891-54.251 74.414-54.251"\n        fill="#EB4335"\n      ></path>\n    </svg>\n    <p class="amplify-text amplify-authenticator__federated-text">\n      {{ signInGoogleText }}\n    </p>\n  </amplify-federated-sign-in-button>\n\n  <hr\n    class="amplify-divider amplify-divider--label amplify-divider--small"\n    aria-orientation="horizontal"\n    data-size="small"\n    data-label="or"\n  />\n</div>\n'}]}],S.ctorParameters=function(){return[{type:h}]};var F=function(){function t(t){this.authenticator=t,this.dataAttr="",this.headerText=i.translate("Change Password"),this.changePasswordText=i.translate("Change Password"),this.backToSignInText=i.translate("Back to Sign In")}return Object.defineProperty(t.prototype,"context",{get:function(){return this.authenticator.slotContext},enumerable:!1,configurable:!0}),t.prototype.onInput=function(t){t.preventDefault();var e=t.target,n=e.name,i=e.value;this.authenticator.updateForm({name:n,value:i})},t.prototype.onSubmit=function(t){t.preventDefault(),this.authenticator.submitForm(i.getFormDataFromEvent(t))},t}();F.decorators=[{type:e.Component,args:[{selector:"amplify-force-new-password",template:'<form data-amplify-form (submit)="onSubmit($event)" (input)="onInput($event)">\n  <fieldset\n    class="amplify-flex amplify-authenticator__column"\n    data-amplify-fieldset\n    [disabled]="authenticator.isPending"\n  >\n    <amplify-slot name="force-new-password-header" [context]="context">\n      <h3 class="amplify-heading amplify-heading--3">{{ this.headerText }}</h3>\n    </amplify-slot>\n\n    <amplify-slot name="force-new-form-fields" [context]="context">\n      <amplify-force-new-password-form-fields></amplify-force-new-password-form-fields>\n    </amplify-slot>\n\n    <button amplify-button variation="primary" fullWidth="true" type="submit">\n      {{ changePasswordText }}\n    </button>\n\n    <button\n      amplify-button\n      size="small"\n      variation="link"\n      fontWeight="normal"\n      fullWidth="true"\n      (click)="authenticator.toSignIn()"\n    >\n      {{ backToSignInText }}\n    </button>\n    <amplify-error *ngIf="authenticator.error">\n      {{ authenticator.error }}\n    </amplify-error>\n  </fieldset>\n  <amplify-slot name="force-new-password-footer" [context]="context">\n  </amplify-slot>\n</form>\n'}]}],F.ctorParameters=function(){return[{type:h}]},F.propDecorators={dataAttr:[{type:e.HostBinding,args:["attr.data-amplify-authenticator-forcenewpassword"]}],headerText:[{type:e.Input}]};var P=function(){};P.decorators=[{type:e.Component,args:[{selector:"amplify-force-new-password-form-fields",template:'<div class="amplify-flex amplify-authenticator__column" data-amplify-fieldset>\n  <amplify-base-form-fields route="forceNewPassword"></amplify-base-form-fields>\n</div>\n'}]}];var T=function(){function t(t){this.authenticator=t,this.countryDialCodesValue=i.countryDialCodes,this.errorId=s.nanoid(12)}return Object.defineProperty(t.prototype,"errors",{get:function(){var t=this.authenticator.validationErrors;return i.getErrors(t[this.name])},enumerable:!1,configurable:!0}),t.prototype.onBlur=function(t){var e=t.target.name;this.authenticator.updateBlur({name:e})},t.prototype.isPasswordField=function(){return"password"===this.formField.type},t.prototype.isPhoneField=function(){return"tel"===this.formField.type},t.prototype.hasError=function(){var t;return(null===(t=this.errors)||void 0===t?void 0:t.length)>0},Object.defineProperty(t.prototype,"ariaDescribedBy",{get:function(){return this.hasError()?this.errorId:void 0},enumerable:!1,configurable:!0}),t.prototype.translate=function(t){return i.translate(t)},t}();T.decorators=[{type:e.Component,args:[{selector:"amplify-form-field",template:'<div class="amplify-flex amplify-field amplify-authenticator__column">\n  \x3c!-- Country code field --\x3e\n  <amplify-phone-number-field\n    *ngIf="isPhoneField()"\n    [name]="name"\n    [label]="formField.label"\n    [defaultCountryCode]="formField.dialCode"\n    [dialCodeList]="formField.dialCodeList"\n    [placeholder]="formField.placeholder"\n    [required]="formField.isRequired"\n    [labelHidden]="formField.labelHidden"\n    [autocomplete]="formField.autocomplete"\n    [hasError]="hasError"\n    [describedBy]="ariaDescribedBy"\n    type="tel"\n  ></amplify-phone-number-field>\n\n  <amplify-password-field\n    *ngIf="isPasswordField()"\n    [name]="name"\n    [label]="formField.label"\n    [placeholder]="formField.placeholder"\n    [required]="formField.isRequired"\n    [labelHidden]="formField.labelHidden"\n    [autocomplete]="formField.autocomplete"\n    [hasError]="hasError"\n    [describedBy]="ariaDescribedBy"\n    (setBlur)="onBlur($event)"\n  ></amplify-password-field>\n\n  <amplify-text-field\n    *ngIf="!isPasswordField() && !isPhoneField()"\n    [name]="name"\n    [label]="formField.label"\n    [placeholder]="formField.placeholder"\n    [required]="formField.isRequired"\n    [labelHidden]="formField.labelHidden"\n    [autocomplete]="formField.autocomplete"\n    [type]="formField.type"\n    [hasError]="hasError"\n    [describedBy]="ariaDescribedBy"\n  ></amplify-text-field>\n\n  <div data-amplify-sign-up-errors *ngIf="hasError()" [id]="errorId">\n    <div\n      class="amplify-text amplify-text--error"\n      data-variation="error"\n      *ngFor="let error of errors"\n    >\n      {{ translate(error) }}\n    </div>\n  </div>\n</div>\n'}]}],T.ctorParameters=function(){return[{type:h}]},T.propDecorators={name:[{type:e.Input}],formField:[{type:e.Input}]};var _=function(){function t(t){this.authenticator=t,this.dataAttr="",this.headerText=i.translate("Reset your password"),this.sendCodeText=i.translate("Send Code"),this.backToSignInText=i.translate("Back to Sign In")}return Object.defineProperty(t.prototype,"context",{get:function(){return this.authenticator.slotContext},enumerable:!1,configurable:!0}),t.prototype.onInput=function(t){t.preventDefault();var e=t.target,n=e.name,i=e.value;this.authenticator.updateForm({name:n,value:i})},t.prototype.onSubmit=function(t){t.preventDefault(),this.authenticator.submitForm(i.getFormDataFromEvent(t))},t}();_.decorators=[{type:e.Component,args:[{selector:"amplify-reset-password",template:'<form data-amplify-form (submit)="onSubmit($event)" (input)="onInput($event)">\n  <fieldset\n    class="amplify-flex amplify-authenticator__column"\n    data-amplify-fieldset\n    [disabled]="authenticator.isPending"\n  >\n    <amplify-slot\n      class="amplify-flex"\n      name="reset-password-header"\n      [context]="context"\n    >\n      <h3 class="amplify-heading amplify-heading--3">{{ this.headerText }}</h3>\n    </amplify-slot>\n\n    <amplify-base-form-fields route="resetPassword"></amplify-base-form-fields>\n    <button\n      amplify-button\n      variation="primary"\n      fullWidth="true"\n      type="submit"\n      [isDisabled]="authenticator.isPending"\n    >\n      {{ sendCodeText }}\n    </button>\n    <button\n      amplify-button\n      size="small"\n      variation="link"\n      fontWeight="normal"\n      fullWidth="true"\n      (click)="authenticator.toSignIn()"\n    >\n      {{ backToSignInText }}\n    </button>\n    <amplify-error *ngIf="authenticator.error">\n      {{ authenticator.error }}\n    </amplify-error>\n  </fieldset>\n\n  <amplify-slot name="reset-password-footer" [context]="context">\n  </amplify-slot>\n</form>\n'}]}],_.ctorParameters=function(){return[{type:h}]},_.propDecorators={dataAttr:[{type:e.HostBinding,args:["attr.data-amplify-authenticator-resetPassword"]}],headerText:[{type:e.Input}]};function A(t,e,n,i){return new(n||(n=Promise))((function(a,o){function r(t){try{l(i.next(t))}catch(t){o(t)}}function s(t){try{l(i.throw(t))}catch(t){o(t)}}function l(t){var e;t.done?a(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(r,s)}l((i=i.apply(t,e||[])).next())}))}function k(t,e){var n,i,a,o,r={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;r;)try{if(n=1,i&&(a=2&o[0]?i.return:o[0]?i.throw||((a=i.return)&&a.call(i),0):i.next)&&!(a=a.call(i,o[1])).done)return a;switch(i=0,a&&(o=[2&o[0],a.value]),o[0]){case 0:case 1:a=o;break;case 4:return r.label++,{value:o[1],done:!1};case 5:r.label++,i=o[1],o=[0];continue;case 7:o=r.ops.pop(),r.trys.pop();continue;default:if(!(a=r.trys,(a=a.length>0&&a[a.length-1])||6!==o[0]&&2!==o[0])){r=0;continue}if(3===o[0]&&(!a||o[1]>a[0]&&o[1]<a[3])){r.label=o[1];break}if(6===o[0]&&r.label<a[1]){r.label=a[1],a=o;break}if(a&&r.label<a[2]){r.label=a[2],r.ops.push(o);break}a[2]&&r.ops.pop(),r.trys.pop();continue}o=e.call(t,r)}catch(t){o=[6,t],i=0}finally{n=a=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}}Object.create;Object.create;var D=new r.Logger("SetupTotp"),O=function(){function t(t){this.authenticator=t,this.dataAttr="",this.headerText=i.translate("Setup TOTP"),this.qrCodeSource="",this.secretKey="",this.copyTextLabel=i.translate("COPY"),this.backToSignInText=i.translate("Back to Sign In"),this.confirmText=i.translate("Confirm")}return t.prototype.ngOnInit=function(){this.generateQRCode()},Object.defineProperty(t.prototype,"context",{get:function(){return this.authenticator.slotContext},enumerable:!1,configurable:!0}),t.prototype.generateQRCode=function(){var t,e,n,a,o,s;return A(this,void 0,void 0,(function(){var l,p,u,c,f,m,y,h,g;return k(this,(function(b){switch(b.label){case 0:l=this.authenticator.authState,p=i.getActorContext(l),u=p.user,b.label=1;case 1:return b.trys.push([1,4,,5]),c=this,[4,r.Auth.setupTOTP(u)];case 2:return c.secretKey=b.sent(),f=null!==(n=null===(e=null===(t=this.formOverrides)||void 0===t?void 0:t.QR)||void 0===e?void 0:e.totpIssuer)&&void 0!==n?n:"AWSCognito",m=null!==(s=null===(o=null===(a=this.formOverrides)||void 0===a?void 0:a.QR)||void 0===o?void 0:o.totpUsername)&&void 0!==s?s:u.username,y=encodeURI("otpauth://totp/"+f+":"+m+"?secret="+this.secretKey+"&issuer="+f),D.info("totp code was generated:",y),h=this,[4,d.default.toDataURL(y)];case 3:return h.qrCodeSource=b.sent(),[3,5];case 4:return g=b.sent(),D.error(g),[3,5];case 5:return[2]}}))}))},t.prototype.onInput=function(t){t.preventDefault();var e=t.target,n=e.name,i=e.value;this.authenticator.updateForm({name:n,value:i})},t.prototype.onSubmit=function(t){t.preventDefault(),this.authenticator.submitForm(i.getFormDataFromEvent(t))},t.prototype.copyText=function(){navigator.clipboard.writeText(this.secretKey),this.copyTextLabel=i.translate("COPIED")},t}();O.decorators=[{type:e.Component,args:[{selector:"amplify-setup-totp",template:'<form data-amplify-form (submit)="onSubmit($event)" (input)="onInput($event)">\n  <fieldset\n    class="amplify-flex amplify-authenticator__column"\n    data-amplify-fieldset\n    [disabled]="authenticator.isPending"\n  >\n    <amplify-slot name="setup-totp-header" [context]="context">\n      <h3 class="amplify-heading amplify-heading--3">{{ this.headerText }}</h3>\n    </amplify-slot>\n    <p *ngIf="!qrCodeSource">Loading...</p>\n    <img\n      *ngIf="qrCodeSource"\n      [src]="qrCodeSource"\n      alt="qr code"\n      data-amplify-qrcode\n      width="228"\n      height="228"\n    />\n    <div class="amplify-flex" data-amplify-copy>\n      <div>{{ secretKey }}</div>\n      <div data-amplify-copy-svg (click)="copyText()">\n        <div data-amplify-copy-tooltip>{{ copyTextLabel }}</div>\n        <svg\n          width="24"\n          height="24"\n          viewBox="0 0 24 24"\n          xmlns="http://www.w3.org/2000/svg"\n        >\n          <path\n            d="M16 1H4C2.9 1 2 1.9 2 3V17H4V3H16V1ZM15 5H8C6.9 5 6.01 5.9 6.01 7L6 21C6 22.1 6.89 23 7.99 23H19C20.1 23 21 22.1 21 21V11L15 5ZM8 21V7H14V12H19V21H8Z"\n          />\n        </svg>\n      </div>\n    </div>\n\n    <amplify-base-form-fields route="setupTOTP"></amplify-base-form-fields>\n    <button\n      amplify-button\n      variation="primary"\n      fullWidth="true"\n      type="submit"\n      [isDisabled]="authenticator.isPending"\n    >\n      {{ confirmText }}\n    </button>\n    <button\n      amplify-button\n      size="small"\n      variation="link"\n      fontWeight="normal"\n      fullWidth="true"\n      (click)="authenticator.toSignIn()"\n    >\n      {{ backToSignInText }}\n    </button>\n    <amplify-error *ngIf="authenticator.error">\n      {{ authenticator.error }}\n    </amplify-error>\n  </fieldset>\n  <amplify-slot name="setup-totp-footer" [context]="context"> </amplify-slot>\n</form>\n'}]}],O.ctorParameters=function(){return[{type:h}]},O.propDecorators={dataAttr:[{type:e.HostBinding,args:["attr.data-amplify-authenticator-setup-totp"]}]};var E=function(){function t(t){this.authenticator=t,this.dataAttr="",this.forgotPasswordText=i.hasTranslation("Forgot your password? ")?i.translate("Forgot your password? "):i.translate("Forgot your password?"),this.signInButtonText=i.translate("Sign in")}return Object.defineProperty(t.prototype,"context",{get:function(){return this.authenticator.slotContext},enumerable:!1,configurable:!0}),t.prototype.onInput=function(t){t.preventDefault();var e=t.target,n=e.name,i=e.value;this.authenticator.updateForm({name:n,value:i})},t.prototype.onSubmit=function(t){t.preventDefault(),this.authenticator.submitForm(i.getFormDataFromEvent(t))},t}();E.decorators=[{type:e.Component,args:[{selector:"amplify-sign-in",template:'<amplify-slot name="sign-in-header" [context]="context"></amplify-slot>\n\n<form data-amplify-form (submit)="onSubmit($event)" (input)="onInput($event)">\n  <amplify-federated-sign-in></amplify-federated-sign-in>\n  <fieldset\n    class="amplify-flex amplify-authenticator__column"\n    style="flex-direction: column"\n    data-amplify-fieldset\n    [disabled]="authenticator.isPending"\n  >\n    <legend class="amplify-visually-hidden">Sign in</legend>\n    <amplify-base-form-fields route="signIn"></amplify-base-form-fields>\n    <button\n      amplify-button\n      variation="primary"\n      fullWidth="true"\n      type="submit"\n      [isDisabled]="authenticator.isPending"\n    >\n      {{ signInButtonText }}\n    </button>\n\n    <amplify-error *ngIf="authenticator.error">\n      {{ authenticator.error }}\n    </amplify-error>\n  </fieldset>\n</form>\n\n<amplify-slot name="sign-in-footer" [context]="context">\n  <div data-amplify-footer>\n    <button\n      amplify-button\n      fontWeight="normal"\n      size="small"\n      variation="link"\n      fullWidth="true"\n      (click)="authenticator.toResetPassword()"\n    >\n      {{ forgotPasswordText }}\n    </button>\n  </div>\n</amplify-slot>\n',encapsulation:e.ViewEncapsulation.None}]}],E.ctorParameters=function(){return[{type:h}]},E.propDecorators={dataAttr:[{type:e.HostBinding,args:["attr.data-amplify-authenticator-signin"]}]};var B=function(){function t(t){this.authenticator=t,this.dataAttr="",this.createAccountText=i.translate("Create Account")}return Object.defineProperty(t.prototype,"context",{get:function(){return this.authenticator.slotContext},enumerable:!1,configurable:!0}),t.prototype.onInput=function(t){var e=t.target,n=e.checked,i=e.name,a=e.type,o=e.value;"checkbox"!==a||n||(o=void 0),this.authenticator.updateForm({name:i,value:o})},t.prototype.onSubmit=function(t){t.preventDefault(),this.authenticator.submitForm(i.getFormDataFromEvent(t))},t}();B.decorators=[{type:e.Component,args:[{selector:"amplify-sign-up",template:'<amplify-slot name="sign-up-header" [context]="context"></amplify-slot>\n\n<form data-amplify-form (submit)="onSubmit($event)" (input)="onInput($event)">\n  <amplify-federated-sign-in></amplify-federated-sign-in>\n  <div class="amplify-flex amplify-authenticator__column">\n    <div class="amplify-flex amplify-authenticator__column">\n      <amplify-slot name="sign-up-form-fields" [context]="context">\n        <amplify-sign-up-form-fields></amplify-sign-up-form-fields>\n      </amplify-slot>\n\n      <amplify-error *ngIf="authenticator.error">\n        {{ authenticator.error }}\n      </amplify-error>\n    </div>\n\n    <amplify-slot name="sign-up-button" [context]="context">\n      <button\n        [isDisabled]="\n          authenticator.isPending || authenticator.hasValidationErrors\n        "\n        amplify-button\n        variation="primary"\n        fullWidth="true"\n        type="submit"\n      >\n        {{ createAccountText }}\n      </button>\n    </amplify-slot>\n  </div>\n</form>\n\n<amplify-slot name="sign-up-footer" [context]="context"> </amplify-slot>\n'}]}],B.ctorParameters=function(){return[{type:h}]},B.propDecorators={dataAttr:[{type:e.HostBinding,args:["attr.data-amplify-authenticator-signup"]}]};var H=function(){};H.decorators=[{type:e.Component,args:[{selector:"amplify-sign-up-form-fields",template:'<div class="amplify-flex amplify-authenticator__column" data-amplify-fieldset>\n  <amplify-base-form-fields route="signUp"></amplify-base-form-fields>\n</div>\n'}]}];var j=function(){return i.defaultFormFieldOptions},z=function(){function t(t){this.authenticator=t,this.dataAttr="",this.headerText=i.translate("Account recovery requires verified contact information"),this.unverifiedAttributes={},this.labelId=s.nanoid(12),this.skipText=i.translate("Skip"),this.verifyText=i.translate("Verify")}return t.prototype.ngOnInit=function(){var t=i.getActorState(this.authenticator.authState);this.unverifiedAttributes=t.context.unverifiedAttributes},Object.defineProperty(t.prototype,"context",{get:function(){return this.authenticator.slotContext},enumerable:!1,configurable:!0}),t.prototype.getLabelForAttr=function(t){var e,n=null===(e=j()[t])||void 0===e?void 0:e.label;return i.translate(n)},t.prototype.onInput=function(t){t.preventDefault();var e=t.target,n=e.name,i=e.value;this.authenticator.updateForm({name:n,value:i})},t.prototype.onSubmit=function(t){t.preventDefault(),this.authenticator.submitForm(i.getFormDataFromEvent(t))},t}();z.decorators=[{type:e.Component,args:[{selector:"amplify-verify-user",template:'<form data-amplify-form (input)="onInput($event)" (submit)="onSubmit($event)">\n  <fieldset\n    class="amplify-flex amplify-authenticator__column"\n    data-amplify-fieldset\n    [disabled]="authenticator.isPending"\n  >\n    <amplify-slot name="verify-user-header" [context]="context">\n      <h3 class="amplify-heading amplify-heading--3">{{ this.headerText }}</h3>\n    </amplify-slot>\n\n    <div *ngFor="let unverifiedAttribute of unverifiedAttributes | keyvalue">\n      <input\n        name="unverifiedAttr"\n        type="radio"\n        [value]="unverifiedAttribute.key"\n        [id]="labelId"\n      />\n      <label [for]="labelId">{{\n        getLabelForAttr(unverifiedAttribute.key)\n      }}</label>\n    </div>\n\n    <button\n      amplify-button\n      variation="primary"\n      fullWidth="true"\n      type="submit"\n      [isDisabled]="authenticator.isPending"\n    >\n      {{ verifyText }}\n    </button>\n\n    <button\n      amplify-button\n      size="small"\n      variation="link"\n      fontWeight="normal"\n      fullWidth="true"\n      (click)="authenticator.skipVerification()"\n    >\n      {{ skipText }}\n    </button>\n\n    <amplify-error *ngIf="authenticator.error">\n      {{ authenticator.error }}\n    </amplify-error>\n  </fieldset>\n  <amplify-slot name="verify-user-footer" [context]="context"> </amplify-slot>\n</form>\n',encapsulation:e.ViewEncapsulation.None}]}],z.ctorParameters=function(){return[{type:h}]},z.propDecorators={dataAttr:[{type:e.HostBinding,args:["attr.data-amplify-authenticator-verifyuser"]}],headerText:[{type:e.Input}]};var M=function(){function t(t){this.authenticator=t,this.display="contents",this.formFields=[]}return t.prototype.ngOnInit=function(){var t=this.authenticator.authState;this.formFields=i.getSortedFormFields(this.route,t),"confirmSignUp"===this.route&&this.handleConfirmSignUp()},t.prototype.handleConfirmSignUp=function(){var t,e=this.authenticator.authState,n=i.hasTranslation("Confirmation Code")?i.translate("Confirmation Code"):i.translate("Enter your code"),a=i.getDefaultFormFields(this.route,e);a.confirmation_code.placeholder&&(a.confirmation_code.placeholder=n);var o=(null===(t=i.getActorContext(e).formFields)||void 0===t?void 0:t.confirmSignUp)||{},r=i.applyDefaults(a,o);this.formFields=i.sortFormFields(r)},t}();M.decorators=[{type:e.Component,args:[{selector:"amplify-base-form-fields",template:'<ng-container *ngFor="let formField of formFields">\n  <amplify-form-field\n    [name]="formField[0]"\n    [formField]="formField[1]"\n  ></amplify-form-field>\n</ng-container>\n'}]}],M.ctorParameters=function(){return[{type:h}]},M.propDecorators={route:[{type:e.Input}],display:[{type:e.HostBinding,args:["style.display"]}]};var W=function(){function t(){this.type="button",this.fullWidth=!1,this.isDisabled=!1,this.size="medium",this.variation="default",this.fontWeight="normal"}return Object.defineProperty(t.prototype,"getDisabled",{get:function(){return this.isDisabled?"":null},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"classNames",{get:function(){var t="amplify-button";return this.variation&&(t+=" amplify-button--"+this.variation),this.size&&(t+=" amplify-button--"+this.size),this.fullWidth&&(t+=" amplify-button--fullwidth"),this.isDisabled&&(t+=" amplify-button--disabled amplify-button--loading"),t},enumerable:!1,configurable:!0}),t.prototype.ngOnInit=function(){this.typeAttr=this.type,this.fullWidthAttr=this.fullWidth,this.sizeAttr=this.size,this.variationAttr=this.variation,this.fontWeightAttr=this.fontWeight},t}();W.decorators=[{type:e.Component,args:[{selector:"button[amplify-button]",template:"<ng-content></ng-content>\n"}]}],W.propDecorators={type:[{type:e.Input}],fullWidth:[{type:e.Input}],isDisabled:[{type:e.Input}],size:[{type:e.Input}],variation:[{type:e.Input}],fontWeight:[{type:e.Input}],typeAttr:[{type:e.HostBinding,args:["type"]}],fullWidthAttr:[{type:e.HostBinding,args:["attr.data-fullwidth"]}],sizeAttr:[{type:e.HostBinding,args:["attr.data-size"]}],variationAttr:[{type:e.HostBinding,args:["attr.data-variation"]}],fontWeightAttr:[{type:e.HostBinding,args:["style.font-weight"]}],getDisabled:[{type:e.HostBinding,args:["attr.disabled"]}],classNames:[{type:e.HostBinding,args:["class"]}]};var U=function(){function t(){this.defaultChecked=!1,this.hasError=!1,this.isChecked=!1}return t.prototype.ngOnInit=function(){this.defaultChecked&&(this.isChecked=!0)},t.prototype.handleClick=function(){this.isChecked=!this.isChecked},t}();U.decorators=[{type:e.Component,args:[{selector:"amplify-checkbox",template:'<div class="amplify-flex amplify-field amplify-checkboxfield">\n  <label class="amplify-flex amplify-checkbox">\n    <span class="amplify-visually-hidden">\n      <input\n        (click)="handleClick()"\n        class="\n          amplify-input\n          amplify-field-group__control\n          amplify-checkbox__input\n        "\n        aria-invalid="false"\n        type="checkbox"\n        [name]="name"\n        [value]="value"\n      />\n    </span>\n    <span\n      class="amplify-flex amplify-checkbox__button"\n      aria-hidden="true"\n      data-focus="false"\n      [ngClass]="{\n        \'amplify-checkbox__button--error\': hasError\n      }"\n      [attr.data-error]="hasError"\n      [attr.data-checked]="isChecked"\n    >\n      <svg\n        xmlns="http://www.w3.org/2000/svg"\n        class="amplify-icon amplify-checkbox__icon"\n        viewBox="0 0 24 24"\n        fill="currentColor"\n        [attr.data-checked]="isChecked"\n        [ngClass]="{\n          \'amplify-checkbox__icon--checked\': isChecked\n        }"\n      >\n        <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z"></path>\n      </svg>\n    </span>\n    <span class="amplify-text amplify-checkbox__label">\n      <ng-content></ng-content>\n    </span>\n  </label>\n  <p *ngIf="hasError" class="amplify-text amplify-field__error-message">\n    {{ errorMessage }}\n  </p>\n</div>\n'}]}],U.propDecorators={defaultChecked:[{type:e.Input}],errorMessage:[{type:e.Input}],hasError:[{type:e.Input}],label:[{type:e.Input}],name:[{type:e.Input}],value:[{type:e.Input}]};var L=function(){function t(){this.isVisible=!0}return t.prototype.close=function(){this.isVisible=!1},t}();L.decorators=[{type:e.Component,args:[{selector:"amplify-error",template:'<div\n  class="amplify-flex amplify-alert amplify-alert--error"\n  data-variation="error"\n  style="align-items: center; justify-content: space-between"\n  *ngIf="isVisible"\n  role="alert"\n>\n  <div class="amplify-flex" style="align-items: center">\n    <svg\n      xmlns="http://www.w3.org/2000/svg"\n      class="amplify-icon"\n      viewBox="0 0 24 24"\n      fill="currentColor"\n    >\n      <path\n        d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm1 15h-2v-2h2v2zm0-4h-2V7h2v6z"\n      ></path>\n    </svg>\n    <div><ng-content></ng-content></div>\n  </div>\n  <button\n    amplify-button\n    class="amplify-field-group__control"\n    variation="link"\n    [fullWidth]="false"\n    (click)="close()"\n  >\n    <svg\n      xmlns="http://www.w3.org/2000/svg"\n      class="amplify-icon"\n      viewBox="0 0 24 24"\n      fill="currentColor"\n    >\n      <path\n        d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"\n      ></path>\n    </svg>\n  </button>\n</div>\n'}]}];var V=function(){function t(){this.autocomplete="new-password",this.disabled=!1,this.fieldId="amplify-field-"+s.nanoid(12),this.initialValue="",this.label="",this.placeholder="",this.required=!0,this.labelHidden=!1,this.setBlur=new e.EventEmitter,this.type="password",this.showPassword=!1,this.showPasswordButtonlabel=i.translate("Show password")}return t.prototype.togglePasswordText=function(){this.showPassword=!this.showPassword,this.showPasswordButtonlabel=this.showPassword?i.translate("Show password"):i.translate("Hide password"),this.type=this.showPassword?"text":"password"},t}();V.decorators=[{type:e.Component,args:[{selector:"amplify-password-field",template:'<label\n  class="amplify-label"\n  [class.amplify-visually-hidden]="labelHidden"\n  [for]="fieldId"\n>\n  {{ label }}\n</label>\n<div class="amplify-flex amplify-field-group">\n  <input\n    class="amplify-input amplify-field-group__control"\n    [id]="fieldId"\n    [type]="type"\n    [name]="name"\n    [placeholder]="placeholder"\n    [required]="required"\n    [value]="initialValue"\n    [autocomplete]="autocomplete"\n    [attr.disabled]="disabled ? \'\' : null"\n    [attr.aria-invalid]="hasError ? \'true\' : \'false\'"\n    [attr.aria-describedby]="describedBy"\n    (blur)="setBlur.emit($event)"\n  />\n  <div class="amplify-field-group__outer-end">\n    <button\n      amplify-button\n      [attr.aria-label]="showPasswordButtonlabel"\n      class="amplify-field-group__control amplify-field__show-password"\n      (click)="togglePasswordText()"\n    >\n      <svg\n        *ngIf="!showPassword"\n        xmlns="http://www.w3.org/2000/svg"\n        fill="currentColor"\n        viewBox="0 0 24 24"\n        class="amplify-icon"\n      >\n        <path\n          d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"\n        ></path>\n      </svg>\n      <svg\n        *ngIf="showPassword"\n        xmlns="http://www.w3.org/2000/svg"\n        fill="currentColor"\n        viewBox="0 0 24 24"\n        class="amplify-icon"\n      >\n        <path\n          d="M0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0z"\n          fill="none"\n        ></path>\n        <path\n          d="M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z"\n        ></path>\n      </svg>\n    </button>\n  </div>\n</div>\n'}]}],V.propDecorators={autocomplete:[{type:e.Input}],disabled:[{type:e.Input}],fieldId:[{type:e.Input}],initialValue:[{type:e.Input}],label:[{type:e.Input}],name:[{type:e.Input}],placeholder:[{type:e.Input}],required:[{type:e.Input}],labelHidden:[{type:e.Input}],hasError:[{type:e.Input}],describedBy:[{type:e.Input}],setBlur:[{type:e.Output}]};var q=function(){function t(){this.autocomplete="new-password",this.disabled=!1,this.selectFieldId="amplify-field-"+s.nanoid(12),this.textFieldId="amplify-field-"+s.nanoid(12),this.initialValue="",this.label="",this.placeholder="",this.required=!0,this.labelHidden=!1,this.display="contents"}return t.prototype.ngOnInit=function(){var t;this.countryDialCodesValues=null!==(t=this.dialCodeList)&&void 0!==t?t:i.countryDialCodes},t}();q.decorators=[{type:e.Component,args:[{selector:"amplify-phone-number-field",template:'<label\n  class="amplify-label"\n  [class.amplify-visually-hidden]="labelHidden"\n  [for]="textFieldId"\n>\n  {{ label }}\n</label>\n<div\n  class="amplify-flex amplify-phonenumberfield"\n  amplify-field-group\n  style="gap: 0px"\n>\n  <div class="amplify-field-group__outer-start">\n    <div\n      class="\n        amplify-flex amplify-field amplify-selectfield amplify-countrycodeselect\n      "\n      style="flex-direction: column"\n    >\n      <amplify-form-select\n        name="country_code"\n        label="Country Code"\n        [id]="selectFieldId"\n        [items]="countryDialCodesValues"\n        [defaultValue]="defaultCountryCode"\n      ></amplify-form-select>\n    </div>\n  </div>\n\n  <input\n    class="amplify-input"\n    [id]="textFieldId"\n    [type]="type"\n    [name]="name"\n    [placeholder]="placeholder"\n    [required]="required"\n    [value]="initialValue"\n    [autocomplete]="autocomplete"\n    [attr.disabled]="disabled ? \'\' : null"\n    [attr.aria-invalid]="hasError ? \'true\' : \'false\'"\n    [attr.aria-describedby]="describedBy"\n  />\n</div>\n'}]}],q.propDecorators={autocomplete:[{type:e.Input}],disabled:[{type:e.Input}],defaultCountryCode:[{type:e.Input}],selectFieldId:[{type:e.Input}],textFieldId:[{type:e.Input}],initialValue:[{type:e.Input}],label:[{type:e.Input}],name:[{type:e.Input}],placeholder:[{type:e.Input}],required:[{type:e.Input}],type:[{type:e.Input}],labelHidden:[{type:e.Input}],dialCodeList:[{type:e.Input}],hasError:[{type:e.Input}],describedBy:[{type:e.Input}],display:[{type:e.HostBinding,args:["style.display"]}]};var R=function(){};R.decorators=[{type:e.Component,args:[{selector:"amplify-form-select",template:'<label class="amplify-label amplify-visually-hidden" [for]="id">{{\n  label\n}}</label>\n<div class="amplify-select__wrapper">\n  <select\n    class="amplify-select amplify-field-group__control"\n    autocomplete="tel-country-code"\n    [id]="id"\n    [name]="name"\n  >\n    <option\n      *ngFor="let item of items"\n      [value]="item"\n      [selected]="item === defaultValue"\n    >\n      {{ item }}\n    </option>\n  </select>\n  <div\n    class="amplify-flex amplify-select__icon-wrapper"\n    style="align-items: center; justify-content: center"\n  >\n    <svg\n      xmlns="http://www.w3.org/2000/svg"\n      class="amplify-icon amplify-icon--large"\n      viewBox="0 0 24 24"\n      data-size="large"\n      fill="currentColor"\n    >\n      <path d="M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z"></path>\n    </svg>\n  </div>\n</div>\n'}]}],R.propDecorators={items:[{type:e.Input}],name:[{type:e.Input}],label:[{type:e.Input}],id:[{type:e.Input}],defaultValue:[{type:e.Input}]};var $=function(){this.active=!1,this.display="block"};$.decorators=[{type:e.Component,args:[{selector:"amplify-tab-item",template:'<div\n  data-orientation="horizontal"\n  role="tabpanel"\n  [id]="id"\n  [attr.aria-labelledby]="labelledById"\n  [attr.data-state]="active ? \'active\' : \'inactive\'"\n  [attr.tabindex]="tabIndex"\n>\n  <ng-content *ngIf="active"></ng-content>\n</div>\n'}]}],$.propDecorators={title:[{type:e.Input}],active:[{type:e.Input}],id:[{type:e.Input}],labelledById:[{type:e.Input}],tabIndex:[{type:e.Input}],display:[{type:e.HostBinding,args:["style.display"]}]};var N=function(){function t(){this.tabChange=new e.EventEmitter}return t.prototype.ngAfterContentInit=function(){this.tabs.forEach((function(t,e){t.id="radix-id-"+s.nanoid(12)+"-1-content-"+e,t.labelledById="radix-id-"+s.nanoid(12)+"-1-trigger-"+e})),1!==this.tabs.filter((function(t){return t.active})).length&&this.selectTab(this.tabs.first)},t.prototype.selectTab=function(t){this.tabs.forEach((function(t){t.active=!1})),t.active=!0},t.prototype.handleTabClick=function(t){t.active||(this.tabChange.emit(),this.selectTab(t))},t}();N.decorators=[{type:e.Component,args:[{selector:"amplify-tabs",template:'<div\n  tabindex="0"\n  aria-orientation="horizontal"\n  data-orientation="horizontal"\n  role="tablist"\n  style="outline: none"\n>\n  <div\n    class="amplify-flex amplify-tabs"\n    data-indicator-position="top"\n    style="gap: 0px; justify-content: center"\n  >\n    <div\n      *ngFor="let tab of tabs"\n      class="amplify-tabs-item"\n      data-spacing="equal"\n      data-orientation="horizontal"\n      role="tab"\n      [id]="tab.labelledById"\n      [tabindex]="tab.active ? \'0\' : \'1\'"\n      [attr.aria-selected]="tab.active"\n      [attr.aria-controls]="tab.id"\n      [attr.data-state]="tab.active ? \'active\' : \'inactive\'"\n      (click)="handleTabClick(tab)"\n    >\n      {{ tab.title }}\n    </div>\n  </div>\n</div>\n\n<ng-content></ng-content>\n'}]}],N.propDecorators={tabs:[{type:e.ContentChildren,args:[$]}],tabChange:[{type:e.Output}]};var G=function(){this.autocomplete="new-password",this.disabled=!1,this.fieldId="amplify-field-"+s.nanoid(12),this.initialValue="",this.label="",this.placeholder="",this.required=!0,this.labelHidden=!1,this.display="contents"};G.decorators=[{type:e.Component,args:[{selector:"amplify-text-field",template:'<label\n  class="amplify-label"\n  [class.amplify-visually-hidden]="labelHidden"\n  [for]="fieldId"\n>\n  {{ label }}\n</label>\n<input\n  class="amplify-input"\n  [id]="fieldId"\n  [type]="type"\n  [name]="name"\n  [placeholder]="placeholder"\n  [required]="required"\n  [value]="initialValue"\n  [autocomplete]="autocomplete"\n  [attr.disabled]="disabled ? \'\' : null"\n  [attr.aria-invalid]="hasError ? \'true\' : \'false\'"\n  [attr.aria-describedby]="describedBy"\n/>\n'}]}],G.propDecorators={autocomplete:[{type:e.Input}],disabled:[{type:e.Input}],fieldId:[{type:e.Input}],initialValue:[{type:e.Input}],label:[{type:e.Input}],name:[{type:e.Input}],placeholder:[{type:e.Input}],required:[{type:e.Input}],type:[{type:e.Input}],labelHidden:[{type:e.Input}],hasError:[{type:e.Input}],describedBy:[{type:e.Input}],display:[{type:e.HostBinding,args:["style.display"]}]};var Q=function(){function t(t){this.propService=t,this.display="contents",this.isOverriden=!1}return t.prototype.ngAfterContentInit=function(){var t=this.propService.customComponents[this.name];t&&(this.overridingComponent=t,this.isOverriden=!0)},t}();Q.decorators=[{type:e.Component,args:[{selector:"amplify-slot",template:'\x3c!-- \n  if slot isn\'t overwritten, we display the the default coponent, which is the \n  children passed onto this component.\n--\x3e\n<ng-content *ngIf="!isOverriden"></ng-content>\n\n\x3c!-- If slot is overwritten, we render that instead. --\x3e\n<ng-container\n  *ngIf="isOverriden"\n  [ngTemplateOutlet]="overridingComponent"\n  [ngTemplateOutletContext]="context"\n></ng-container>\n'}]}],Q.ctorParameters=function(){return[{type:m}]},Q.propDecorators={name:[{type:e.Input}],context:[{type:e.Input}],display:[{type:e.HostBinding,args:["style.display"]}]};var Y=function(){};Y.decorators=[{type:e.NgModule,args:[{declarations:[Q,f,g,M,W,U,b,x,I,C,L,w,S,F,P,T,V,q,_,R,O,E,B,H,$,N,G,z],imports:[n.CommonModule],exports:[f,g,U,H,P,G]}]}],Object.defineProperty(t,"translations",{enumerable:!0,get:function(){return i.translations}}),t.AmplifyAuthenticatorModule=Y,t.AmplifySlotDirective=f,t.AuthenticatorComponent=g,t.AuthenticatorService=h,t.BaseFormFieldsComponent=M,t.ButtonComponent=W,t.CheckboxComponent=U,t.ConfirmResetPasswordComponent=b,t.ConfirmSignInComponent=x,t.ConfirmSignUpComponent=I,t.ConfirmVerifyUserComponent=C,t.CustomComponentsService=m,t.ErrorComponent=L,t.FederatedSignInButtonComponent=w,t.FederatedSignInComponent=S,t.ForceNewPasswordComponent=F,t.ForceNewPasswordFormFieldsComponent=P,t.FormFieldComponent=T,t.PasswordFieldComponent=V,t.PhoneNumberFieldComponent=q,t.ResetPasswordComponent=_,t.SelectComponent=R,t.SetupTotpComponent=O,t.SignInComponent=E,t.SignUpComponent=B,t.SignUpFormFieldsComponent=H,t.TabItemComponent=$,t.TabsComponent=N,t.TextFieldComponent=G,t.VerifyUserComponent=z,t.getAttributeMap=j,t["ɵa"]=Q,t["ɵb"]=g,t["ɵba"]=z,t["ɵc"]=M,t["ɵd"]=W,t["ɵe"]=U,t["ɵf"]=b,t["ɵg"]=x,t["ɵh"]=I,t["ɵi"]=C,t["ɵj"]=L,t["ɵk"]=w,t["ɵl"]=S,t["ɵm"]=F,t["ɵn"]=P,t["ɵo"]=T,t["ɵp"]=V,t["ɵq"]=q,t["ɵr"]=_,t["ɵs"]=R,t["ɵt"]=O,t["ɵu"]=E,t["ɵv"]=B,t["ɵw"]=H,t["ɵx"]=$,t["ɵy"]=N,t["ɵz"]=G,Object.defineProperty(t,"__esModule",{value:!0})}));
//# sourceMappingURL=aws-amplify-ui-angular.umd.min.js.map