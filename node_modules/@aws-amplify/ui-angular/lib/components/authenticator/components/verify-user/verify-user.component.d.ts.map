{"version":3,"file":"verify-user.component.d.ts","sources":["verify-user.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit } from '@angular/core';\nimport { AuthenticatorService } from '../../../../services/authenticator.service';\nexport declare class VerifyUserComponent implements OnInit {\n    authenticator: AuthenticatorService;\n    dataAttr: string;\n    headerText: string;\n    unverifiedAttributes: {};\n    labelId: string;\n    skipText: string;\n    verifyText: string;\n    constructor(authenticator: AuthenticatorService);\n    ngOnInit(): void;\n    get context(): {\n        $implicit: {\n            resendCode: (data?: Record<string | number | symbol, any>) => void;\n            signOut: (data?: Record<string | number | symbol, any>) => void;\n            submitForm: (data?: Record<string | number | symbol, any>) => void;\n            updateForm: (data?: Record<string | number | symbol, any>) => void;\n            updateBlur: (data?: Record<string | number | symbol, any>) => void;\n            toFederatedSignIn: (data?: Record<string | number | symbol, any>) => void;\n            toResetPassword: (data?: Record<string | number | symbol, any>) => void;\n            toSignIn: (data?: Record<string | number | symbol, any>) => void;\n            toSignUp: (data?: Record<string | number | symbol, any>) => void;\n            skipVerification: (data?: Record<string | number | symbol, any>) => void;\n            error: string;\n            hasValidationErrors: boolean;\n            isPending: boolean;\n            route: string;\n            authStatus: string;\n            user: import(\"@aws-amplify/ui\").CognitoUserAmplify;\n            validationErrors: {\n                [x: string]: string | string[];\n            };\n            codeDeliveryDetails: import(\"@aws-amplify/ui\").CodeDeliveryDetails;\n        };\n        resendCode: (data?: Record<string | number | symbol, any>) => void;\n        signOut: (data?: Record<string | number | symbol, any>) => void;\n        submitForm: (data?: Record<string | number | symbol, any>) => void;\n        updateForm: (data?: Record<string | number | symbol, any>) => void;\n        updateBlur: (data?: Record<string | number | symbol, any>) => void;\n        toFederatedSignIn: (data?: Record<string | number | symbol, any>) => void;\n        toResetPassword: (data?: Record<string | number | symbol, any>) => void;\n        toSignIn: (data?: Record<string | number | symbol, any>) => void;\n        toSignUp: (data?: Record<string | number | symbol, any>) => void;\n        skipVerification: (data?: Record<string | number | symbol, any>) => void;\n        error: string;\n        hasValidationErrors: boolean;\n        isPending: boolean;\n        route: string;\n        authStatus: string;\n        user: import(\"@aws-amplify/ui\").CognitoUserAmplify;\n        validationErrors: {\n            [x: string]: string | string[];\n        };\n        codeDeliveryDetails: import(\"@aws-amplify/ui\").CodeDeliveryDetails;\n    };\n    getLabelForAttr(authAttr: string): string;\n    onInput(event: Event): void;\n    onSubmit(event: Event): void;\n}\n"]}