{"version":3,"file":"authenticator.component.d.ts","sources":["authenticator.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterContentInit, ChangeDetectorRef, OnDestroy, OnInit } from '@angular/core';\nimport { AuthenticatorMachineOptions, SocialProvider } from '@aws-amplify/ui';\nimport { CustomComponentsService } from '../../../../services/custom-components.service';\nimport { AuthenticatorService } from '../../../../services/authenticator.service';\nexport declare class AuthenticatorComponent implements OnInit, AfterContentInit, OnDestroy {\n    private authenticator;\n    private contextService;\n    private changeDetector;\n    formFields: AuthenticatorMachineOptions['formFields'];\n    initialState: AuthenticatorMachineOptions['initialState'];\n    loginMechanisms: AuthenticatorMachineOptions['loginMechanisms'];\n    services: AuthenticatorMachineOptions['services'];\n    signUpAttributes: AuthenticatorMachineOptions['signUpAttributes'];\n    socialProviders: SocialProvider[];\n    variation: 'default' | 'modal';\n    hideSignUp: boolean;\n    private customComponentQuery;\n    signInTitle: string;\n    signUpTitle: string;\n    private hasInitialized;\n    private isHandlingHubEvent;\n    private unsubscribeMachine;\n    private unsubscribeHub;\n    constructor(authenticator: AuthenticatorService, contextService: CustomComponentsService, changeDetector: ChangeDetectorRef);\n    ngOnInit(): void;\n    /**\n     * Lifecycle Methods\n     */\n    ngAfterContentInit(): void;\n    ngOnDestroy(): void;\n    /**\n     * Class Functions\n     */\n    get context(): {\n        $implicit: {\n            resendCode: (data?: Record<string | number | symbol, any>) => void;\n            signOut: (data?: Record<string | number | symbol, any>) => void;\n            submitForm: (data?: Record<string | number | symbol, any>) => void;\n            updateForm: (data?: Record<string | number | symbol, any>) => void;\n            updateBlur: (data?: Record<string | number | symbol, any>) => void;\n            toFederatedSignIn: (data?: Record<string | number | symbol, any>) => void;\n            toResetPassword: (data?: Record<string | number | symbol, any>) => void;\n            toSignIn: (data?: Record<string | number | symbol, any>) => void;\n            toSignUp: (data?: Record<string | number | symbol, any>) => void;\n            skipVerification: (data?: Record<string | number | symbol, any>) => void;\n            error: string;\n            hasValidationErrors: boolean;\n            isPending: boolean;\n            route: string;\n            authStatus: string;\n            user: import(\"@aws-amplify/ui\").CognitoUserAmplify;\n            validationErrors: {\n                [x: string]: string | string[];\n            };\n            codeDeliveryDetails: import(\"@aws-amplify/ui\").CodeDeliveryDetails;\n        };\n        resendCode: (data?: Record<string | number | symbol, any>) => void;\n        signOut: (data?: Record<string | number | symbol, any>) => void;\n        submitForm: (data?: Record<string | number | symbol, any>) => void;\n        updateForm: (data?: Record<string | number | symbol, any>) => void;\n        updateBlur: (data?: Record<string | number | symbol, any>) => void;\n        toFederatedSignIn: (data?: Record<string | number | symbol, any>) => void;\n        toResetPassword: (data?: Record<string | number | symbol, any>) => void;\n        toSignIn: (data?: Record<string | number | symbol, any>) => void;\n        toSignUp: (data?: Record<string | number | symbol, any>) => void;\n        skipVerification: (data?: Record<string | number | symbol, any>) => void;\n        error: string;\n        hasValidationErrors: boolean;\n        isPending: boolean;\n        route: string;\n        authStatus: string;\n        user: import(\"@aws-amplify/ui\").CognitoUserAmplify;\n        validationErrors: {\n            [x: string]: string | string[];\n        };\n        codeDeliveryDetails: import(\"@aws-amplify/ui\").CodeDeliveryDetails;\n    };\n    get route(): string;\n    onTabChange(): void;\n    hasTabs(): boolean;\n    hasRouteComponent(): boolean;\n    private mapCustomComponents;\n}\n"]}