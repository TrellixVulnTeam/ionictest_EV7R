{"version":3,"file":"authenticator.service.d.ts","sources":["authenticator.service.d.ts"],"names":[],"mappingssourcesContent":["import { OnDestroy } from '@angular/core';\nimport { AuthContext, AuthEvent, AuthInterpreter, AuthMachineState } from '@aws-amplify/ui';\nimport { Event, Subscription } from 'xstate';\nimport { AuthSubscriptionCallback } from '../common';\n/**\n * AuthenticatorService provides access to the authenticator state and context.\n */\nexport declare class AuthenticatorService implements OnDestroy {\n    private _authState;\n    private _authService;\n    private _sendEventAliases;\n    private _machineSubscription;\n    private _facade;\n    constructor();\n    ngOnDestroy(): void;\n    /**\n     * Context facades\n     */\n    get error(): string;\n    get hasValidationErrors(): boolean;\n    get isPending(): boolean;\n    get route(): string;\n    get authStatus(): string;\n    get user(): import(\"@aws-amplify/ui\").CognitoUserAmplify;\n    get validationErrors(): {\n        [x: string]: string | string[];\n    };\n    get codeDeliveryDetails(): import(\"@aws-amplify/ui\").CodeDeliveryDetails;\n    /**\n     * Service facades\n     */\n    get updateForm(): (data?: Record<string | number | symbol, any>) => void;\n    get updateBlur(): (data?: Record<string | number | symbol, any>) => void;\n    get resendCode(): (data?: Record<string | number | symbol, any>) => void;\n    get signOut(): (data?: Record<string | number | symbol, any>) => void;\n    get submitForm(): (data?: Record<string | number | symbol, any>) => void;\n    /**\n     * Transition facades\n     */\n    get toFederatedSignIn(): (data?: Record<string | number | symbol, any>) => void;\n    get toResetPassword(): (data?: Record<string | number | symbol, any>) => void;\n    get toSignIn(): (data?: Record<string | number | symbol, any>) => void;\n    get toSignUp(): (data?: Record<string | number | symbol, any>) => void;\n    get skipVerification(): (data?: Record<string | number | symbol, any>) => void;\n    /**\n     * Internal utility functions\n     */\n    /** @deprecated For internal use only */\n    get authState(): AuthMachineState;\n    /** @deprecated For internal use only */\n    get authService(): AuthInterpreter;\n    /** @deprecated For internal use only */\n    get context(): AuthContext;\n    /** @deprecated For internal use only */\n    get slotContext(): {\n        $implicit: {\n            resendCode: (data?: Record<string | number | symbol, any>) => void;\n            signOut: (data?: Record<string | number | symbol, any>) => void;\n            submitForm: (data?: Record<string | number | symbol, any>) => void;\n            updateForm: (data?: Record<string | number | symbol, any>) => void;\n            updateBlur: (data?: Record<string | number | symbol, any>) => void;\n            toFederatedSignIn: (data?: Record<string | number | symbol, any>) => void;\n            toResetPassword: (data?: Record<string | number | symbol, any>) => void;\n            toSignIn: (data?: Record<string | number | symbol, any>) => void;\n            toSignUp: (data?: Record<string | number | symbol, any>) => void;\n            skipVerification: (data?: Record<string | number | symbol, any>) => void;\n            error: string;\n            hasValidationErrors: boolean;\n            isPending: boolean; /**\n             * Context facades\n             */\n            route: string;\n            authStatus: string;\n            user: import(\"@aws-amplify/ui\").CognitoUserAmplify;\n            validationErrors: {\n                [x: string]: string | string[];\n            };\n            codeDeliveryDetails: import(\"@aws-amplify/ui\").CodeDeliveryDetails;\n        };\n        resendCode: (data?: Record<string | number | symbol, any>) => void;\n        signOut: (data?: Record<string | number | symbol, any>) => void;\n        submitForm: (data?: Record<string | number | symbol, any>) => void;\n        updateForm: (data?: Record<string | number | symbol, any>) => void;\n        updateBlur: (data?: Record<string | number | symbol, any>) => void;\n        toFederatedSignIn: (data?: Record<string | number | symbol, any>) => void;\n        toResetPassword: (data?: Record<string | number | symbol, any>) => void;\n        toSignIn: (data?: Record<string | number | symbol, any>) => void;\n        toSignUp: (data?: Record<string | number | symbol, any>) => void;\n        skipVerification: (data?: Record<string | number | symbol, any>) => void;\n        error: string;\n        hasValidationErrors: boolean;\n        isPending: boolean; /**\n         * Context facades\n         */\n        route: string;\n        authStatus: string;\n        user: import(\"@aws-amplify/ui\").CognitoUserAmplify;\n        validationErrors: {\n            [x: string]: string | string[];\n        };\n        codeDeliveryDetails: import(\"@aws-amplify/ui\").CodeDeliveryDetails;\n    };\n    /** @deprecated For internal use only */\n    subscribe(callback: AuthSubscriptionCallback): Subscription;\n    /** @deprecated For internal use only */\n    send(event: Event<AuthEvent>): void;\n}\n"]}