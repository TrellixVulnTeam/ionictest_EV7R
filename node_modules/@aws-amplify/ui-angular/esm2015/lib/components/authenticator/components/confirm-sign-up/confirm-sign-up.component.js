import { Component, HostBinding, Input } from '@angular/core';
import { AuthenticatorService } from '../../../../services/authenticator.service';
import { getFormDataFromEvent, translate, } from '@aws-amplify/ui';
export class ConfirmSignUpComponent {
    constructor(authenticator) {
        this.authenticator = authenticator;
        this.headerText = translate('Confirm Sign Up');
        this.dataAttr = '';
        // translated texts
        this.resendCodeText = translate('Resend Code');
        this.confirmText = translate('Confirm');
        this.emailMessage = translate('Your code is on the way. To log in, enter the code we emailed to');
        this.textedMessage = translate('Your code is on the way. To log in, enter the code we texted to');
        this.defaultMessage = translate('Your code is on the way. To log in, enter the code we sent you. It may take a minute to arrive.');
        this.minutesMessage = translate('It may take a minute to arrive.');
    }
    get context() {
        return this.authenticator.slotContext;
    }
    get confirmSignUpHeading() {
        const { codeDeliveryDetails: { DeliveryMedium } = {} } = this.authenticator;
        return DeliveryMedium === 'EMAIL'
            ? translate('We Emailed You')
            : DeliveryMedium === 'SMS'
                ? translate('We Texted You')
                : translate('We Sent A Code');
    }
    get subtitleText() {
        const { codeDeliveryDetails: { DeliveryMedium, Destination } = {} } = this.authenticator;
        return DeliveryMedium === 'EMAIL'
            ? `${this.emailMessage} ${Destination}. ${this.minutesMessage}`
            : DeliveryMedium === 'SMS'
                ? `${this.textedMessage} ${Destination}. ${this.minutesMessage}`
                : translate(`${this.defaultMessage}`);
    }
    onInput(event) {
        event.preventDefault();
        const { name, value } = event.target;
        this.authenticator.updateForm({ name, value });
    }
    onSubmit(event) {
        event.preventDefault();
        this.authenticator.submitForm(getFormDataFromEvent(event));
    }
}
ConfirmSignUpComponent.decorators = [
    { type: Component, args: [{
                selector: 'amplify-confirm-sign-up',
                template: "<ng-container>\n  <form data-amplify-form (submit)=\"onSubmit($event)\" (input)=\"onInput($event)\">\n    <fieldset\n      class=\"amplify-flex amplify-authenticator__column\"\n      data-amplify-fieldset\n      [disabled]=\"context.isPending\"\n    >\n      <amplify-slot name=\"confirm-sign-up-header\" [context]=\"context\">\n        <h3\n          class=\"amplify-heading amplify-authenticator__heading\"\n          style=\"font-size: 1.5rem\"\n        >\n          {{ confirmSignUpHeading }}\n        </h3>\n      </amplify-slot>\n      <span class=\"amplify-authenticator__subtitle\">\n        {{ subtitleText }}\n      </span>\n      <amplify-base-form-fields\n        route=\"confirmSignUp\"\n      ></amplify-base-form-fields>\n\n      <button\n        amplify-button\n        variation=\"primary\"\n        fullWidth=\"true\"\n        type=\"submit\"\n        [isDisabled]=\"authenticator.isPending\"\n      >\n        {{ confirmText }}\n      </button>\n      <button\n        amplify-button\n        fontWeight=\"normal\"\n        (click)=\"authenticator.resendCode()\"\n      >\n        {{ resendCodeText }}\n      </button>\n    </fieldset>\n\n    <amplify-error *ngIf=\"context.error\">\n      {{ authenticator.error }}\n    </amplify-error>\n    <amplify-slot\n      name=\"confirm-sign-up-footer\"\n      [context]=\"context\"\n    ></amplify-slot>\n  </form>\n</ng-container>\n"
            },] }
];
ConfirmSignUpComponent.ctorParameters = () => [
    { type: AuthenticatorService }
];
ConfirmSignUpComponent.propDecorators = {
    headerText: [{ type: Input }],
    dataAttr: [{ type: HostBinding, args: ['attr.data-amplify-authenticator-confirmsignup',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlybS1zaWduLXVwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpLWFuZ3VsYXIvc3JjL2xpYi9jb21wb25lbnRzL2F1dGhlbnRpY2F0b3IvY29tcG9uZW50cy9jb25maXJtLXNpZ24tdXAvY29uZmlybS1zaWduLXVwLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFdBQVcsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDdEUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFDbEYsT0FBTyxFQUVMLG9CQUFvQixFQUNwQixTQUFTLEdBQ1YsTUFBTSxpQkFBaUIsQ0FBQztBQUt6QixNQUFNLE9BQU8sc0JBQXNCO0lBcUJqQyxZQUFtQixhQUFtQztRQUFuQyxrQkFBYSxHQUFiLGFBQWEsQ0FBc0I7UUFwQjdDLGVBQVUsR0FBRyxTQUFTLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUVXLGFBQVEsR0FBRyxFQUFFLENBQUM7UUFFNUUsbUJBQW1CO1FBQ1osbUJBQWMsR0FBRyxTQUFTLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDMUMsZ0JBQVcsR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDbkMsaUJBQVksR0FBRyxTQUFTLENBQzdCLGtFQUFrRSxDQUNuRSxDQUFDO1FBQ0ssa0JBQWEsR0FBRyxTQUFTLENBQzlCLGlFQUFpRSxDQUNsRSxDQUFDO1FBQ0ssbUJBQWMsR0FBRyxTQUFTLENBQy9CLGlHQUFpRyxDQUNsRyxDQUFDO1FBQ0ssbUJBQWMsR0FBRyxTQUFTLENBQUMsaUNBQWlDLENBQUMsQ0FBQztJQUlaLENBQUM7SUFFMUQsSUFBVyxPQUFPO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUM7SUFDeEMsQ0FBQztJQUVELElBQVcsb0JBQW9CO1FBQzdCLE1BQU0sRUFBRSxtQkFBbUIsRUFBRSxFQUFFLGNBQWMsRUFBRSxHQUFHLEVBQUUsRUFBRSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUM7UUFDNUUsT0FBTyxjQUFjLEtBQUssT0FBTztZQUMvQixDQUFDLENBQUMsU0FBUyxDQUFDLGdCQUFnQixDQUFDO1lBQzdCLENBQUMsQ0FBQyxjQUFjLEtBQUssS0FBSztnQkFDMUIsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUM7Z0JBQzVCLENBQUMsQ0FBQyxTQUFTLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztJQUNsQyxDQUFDO0lBRUQsSUFBVyxZQUFZO1FBQ3JCLE1BQU0sRUFBRSxtQkFBbUIsRUFBRSxFQUFFLGNBQWMsRUFBRSxXQUFXLEVBQUUsR0FBRyxFQUFFLEVBQUUsR0FDakUsSUFBSSxDQUFDLGFBQWEsQ0FBQztRQUNyQixPQUFPLGNBQWMsS0FBSyxPQUFPO1lBQy9CLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxZQUFZLElBQUksV0FBVyxLQUFLLElBQUksQ0FBQyxjQUFjLEVBQUU7WUFDL0QsQ0FBQyxDQUFDLGNBQWMsS0FBSyxLQUFLO2dCQUMxQixDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsYUFBYSxJQUFJLFdBQVcsS0FBSyxJQUFJLENBQUMsY0FBYyxFQUFFO2dCQUNoRSxDQUFDLENBQUMsU0FBUyxDQUFDLEdBQUcsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDLENBQUM7SUFDMUMsQ0FBQztJQUVELE9BQU8sQ0FBQyxLQUFZO1FBQ2xCLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixNQUFNLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxHQUFxQixLQUFLLENBQUMsTUFBTSxDQUFDO1FBQ3ZELElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUVELFFBQVEsQ0FBQyxLQUFZO1FBQ25CLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxvQkFBb0IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQzdELENBQUM7OztZQTNERixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLHlCQUF5QjtnQkFDbkMsKzNDQUErQzthQUNoRDs7O1lBVFEsb0JBQW9COzs7eUJBVzFCLEtBQUs7dUJBRUwsV0FBVyxTQUFDLCtDQUErQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSG9zdEJpbmRpbmcsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEF1dGhlbnRpY2F0b3JTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2VydmljZXMvYXV0aGVudGljYXRvci5zZXJ2aWNlJztcbmltcG9ydCB7XG4gIEZvcm1GaWVsZHNBcnJheSxcbiAgZ2V0Rm9ybURhdGFGcm9tRXZlbnQsXG4gIHRyYW5zbGF0ZSxcbn0gZnJvbSAnQGF3cy1hbXBsaWZ5L3VpJztcbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FtcGxpZnktY29uZmlybS1zaWduLXVwJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2NvbmZpcm0tc2lnbi11cC5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIENvbmZpcm1TaWduVXBDb21wb25lbnQge1xuICBASW5wdXQoKSBoZWFkZXJUZXh0ID0gdHJhbnNsYXRlKCdDb25maXJtIFNpZ24gVXAnKTtcblxuICBASG9zdEJpbmRpbmcoJ2F0dHIuZGF0YS1hbXBsaWZ5LWF1dGhlbnRpY2F0b3ItY29uZmlybXNpZ251cCcpIGRhdGFBdHRyID0gJyc7XG5cbiAgLy8gdHJhbnNsYXRlZCB0ZXh0c1xuICBwdWJsaWMgcmVzZW5kQ29kZVRleHQgPSB0cmFuc2xhdGUoJ1Jlc2VuZCBDb2RlJyk7XG4gIHB1YmxpYyBjb25maXJtVGV4dCA9IHRyYW5zbGF0ZSgnQ29uZmlybScpO1xuICBwdWJsaWMgZW1haWxNZXNzYWdlID0gdHJhbnNsYXRlKFxuICAgICdZb3VyIGNvZGUgaXMgb24gdGhlIHdheS4gVG8gbG9nIGluLCBlbnRlciB0aGUgY29kZSB3ZSBlbWFpbGVkIHRvJ1xuICApO1xuICBwdWJsaWMgdGV4dGVkTWVzc2FnZSA9IHRyYW5zbGF0ZShcbiAgICAnWW91ciBjb2RlIGlzIG9uIHRoZSB3YXkuIFRvIGxvZyBpbiwgZW50ZXIgdGhlIGNvZGUgd2UgdGV4dGVkIHRvJ1xuICApO1xuICBwdWJsaWMgZGVmYXVsdE1lc3NhZ2UgPSB0cmFuc2xhdGUoXG4gICAgJ1lvdXIgY29kZSBpcyBvbiB0aGUgd2F5LiBUbyBsb2cgaW4sIGVudGVyIHRoZSBjb2RlIHdlIHNlbnQgeW91LiBJdCBtYXkgdGFrZSBhIG1pbnV0ZSB0byBhcnJpdmUuJ1xuICApO1xuICBwdWJsaWMgbWludXRlc01lc3NhZ2UgPSB0cmFuc2xhdGUoJ0l0IG1heSB0YWtlIGEgbWludXRlIHRvIGFycml2ZS4nKTtcblxuICBwdWJsaWMgc29ydGVkRm9ybUZpZWxkczogRm9ybUZpZWxkc0FycmF5O1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBhdXRoZW50aWNhdG9yOiBBdXRoZW50aWNhdG9yU2VydmljZSkge31cblxuICBwdWJsaWMgZ2V0IGNvbnRleHQoKSB7XG4gICAgcmV0dXJuIHRoaXMuYXV0aGVudGljYXRvci5zbG90Q29udGV4dDtcbiAgfVxuXG4gIHB1YmxpYyBnZXQgY29uZmlybVNpZ25VcEhlYWRpbmcoKTogc3RyaW5nIHtcbiAgICBjb25zdCB7IGNvZGVEZWxpdmVyeURldGFpbHM6IHsgRGVsaXZlcnlNZWRpdW0gfSA9IHt9IH0gPSB0aGlzLmF1dGhlbnRpY2F0b3I7XG4gICAgcmV0dXJuIERlbGl2ZXJ5TWVkaXVtID09PSAnRU1BSUwnXG4gICAgICA/IHRyYW5zbGF0ZSgnV2UgRW1haWxlZCBZb3UnKVxuICAgICAgOiBEZWxpdmVyeU1lZGl1bSA9PT0gJ1NNUydcbiAgICAgID8gdHJhbnNsYXRlKCdXZSBUZXh0ZWQgWW91JylcbiAgICAgIDogdHJhbnNsYXRlKCdXZSBTZW50IEEgQ29kZScpO1xuICB9XG5cbiAgcHVibGljIGdldCBzdWJ0aXRsZVRleHQoKTogc3RyaW5nIHtcbiAgICBjb25zdCB7IGNvZGVEZWxpdmVyeURldGFpbHM6IHsgRGVsaXZlcnlNZWRpdW0sIERlc3RpbmF0aW9uIH0gPSB7fSB9ID1cbiAgICAgIHRoaXMuYXV0aGVudGljYXRvcjtcbiAgICByZXR1cm4gRGVsaXZlcnlNZWRpdW0gPT09ICdFTUFJTCdcbiAgICAgID8gYCR7dGhpcy5lbWFpbE1lc3NhZ2V9ICR7RGVzdGluYXRpb259LiAke3RoaXMubWludXRlc01lc3NhZ2V9YFxuICAgICAgOiBEZWxpdmVyeU1lZGl1bSA9PT0gJ1NNUydcbiAgICAgID8gYCR7dGhpcy50ZXh0ZWRNZXNzYWdlfSAke0Rlc3RpbmF0aW9ufS4gJHt0aGlzLm1pbnV0ZXNNZXNzYWdlfWBcbiAgICAgIDogdHJhbnNsYXRlKGAke3RoaXMuZGVmYXVsdE1lc3NhZ2V9YCk7XG4gIH1cblxuICBvbklucHV0KGV2ZW50OiBFdmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgeyBuYW1lLCB2YWx1ZSB9ID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZXZlbnQudGFyZ2V0O1xuICAgIHRoaXMuYXV0aGVudGljYXRvci51cGRhdGVGb3JtKHsgbmFtZSwgdmFsdWUgfSk7XG4gIH1cblxuICBvblN1Ym1pdChldmVudDogRXZlbnQpOiB2b2lkIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRoaXMuYXV0aGVudGljYXRvci5zdWJtaXRGb3JtKGdldEZvcm1EYXRhRnJvbUV2ZW50KGV2ZW50KSk7XG4gIH1cbn1cbiJdfQ==