import { Component, Input } from '@angular/core';
import { translate, countryDialCodes, getErrors, } from '@aws-amplify/ui';
import { nanoid } from 'nanoid';
import { AuthenticatorService } from '../../../../services/authenticator.service';
export class FormFieldComponent {
    constructor(authenticator) {
        this.authenticator = authenticator;
        this.countryDialCodesValue = countryDialCodes;
        this.errorId = nanoid(12);
    }
    get errors() {
        const { validationErrors } = this.authenticator;
        return getErrors(validationErrors[this.name]);
    }
    onBlur($event) {
        let { name } = $event.target;
        this.authenticator.updateBlur({ name });
    }
    isPasswordField() {
        return this.formField.type === 'password';
    }
    isPhoneField() {
        return this.formField.type === 'tel';
    }
    hasError() {
        var _a;
        return ((_a = this.errors) === null || _a === void 0 ? void 0 : _a.length) > 0;
    }
    get ariaDescribedBy() {
        return this.hasError() ? this.errorId : undefined;
    }
    translate(phrase) {
        return translate(phrase);
    }
}
FormFieldComponent.decorators = [
    { type: Component, args: [{
                selector: 'amplify-form-field',
                template: "<div class=\"amplify-flex amplify-field amplify-authenticator__column\">\n  <!-- Country code field -->\n  <amplify-phone-number-field\n    *ngIf=\"isPhoneField()\"\n    [name]=\"name\"\n    [label]=\"formField.label\"\n    [defaultCountryCode]=\"formField.dialCode\"\n    [dialCodeList]=\"formField.dialCodeList\"\n    [placeholder]=\"formField.placeholder\"\n    [required]=\"formField.isRequired\"\n    [labelHidden]=\"formField.labelHidden\"\n    [autocomplete]=\"formField.autocomplete\"\n    [hasError]=\"hasError\"\n    [describedBy]=\"ariaDescribedBy\"\n    type=\"tel\"\n  ></amplify-phone-number-field>\n\n  <amplify-password-field\n    *ngIf=\"isPasswordField()\"\n    [name]=\"name\"\n    [label]=\"formField.label\"\n    [placeholder]=\"formField.placeholder\"\n    [required]=\"formField.isRequired\"\n    [labelHidden]=\"formField.labelHidden\"\n    [autocomplete]=\"formField.autocomplete\"\n    [hasError]=\"hasError\"\n    [describedBy]=\"ariaDescribedBy\"\n    (setBlur)=\"onBlur($event)\"\n  ></amplify-password-field>\n\n  <amplify-text-field\n    *ngIf=\"!isPasswordField() && !isPhoneField()\"\n    [name]=\"name\"\n    [label]=\"formField.label\"\n    [placeholder]=\"formField.placeholder\"\n    [required]=\"formField.isRequired\"\n    [labelHidden]=\"formField.labelHidden\"\n    [autocomplete]=\"formField.autocomplete\"\n    [type]=\"formField.type\"\n    [hasError]=\"hasError\"\n    [describedBy]=\"ariaDescribedBy\"\n  ></amplify-text-field>\n\n  <div data-amplify-sign-up-errors *ngIf=\"hasError()\" [id]=\"errorId\">\n    <div\n      class=\"amplify-text amplify-text--error\"\n      data-variation=\"error\"\n      *ngFor=\"let error of errors\"\n    >\n      {{ translate(error) }}\n    </div>\n  </div>\n</div>\n"
            },] }
];
FormFieldComponent.ctorParameters = () => [
    { type: AuthenticatorService }
];
FormFieldComponent.propDecorators = {
    name: [{ type: Input }],
    formField: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS1maWVsZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy91aS1hbmd1bGFyL3NyYy9saWIvY29tcG9uZW50cy9hdXRoZW50aWNhdG9yL2NvbXBvbmVudHMvZm9ybS1maWVsZC9mb3JtLWZpZWxkLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQ0wsU0FBUyxFQUNULGdCQUFnQixFQUVoQixTQUFTLEdBQ1YsTUFBTSxpQkFBaUIsQ0FBQztBQUN6QixPQUFPLEVBQUUsTUFBTSxFQUFFLE1BQU0sUUFBUSxDQUFDO0FBQ2hDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBTWxGLE1BQU0sT0FBTyxrQkFBa0I7SUFRN0IsWUFBb0IsYUFBbUM7UUFBbkMsa0JBQWEsR0FBYixhQUFhLENBQXNCO1FBSGhELDBCQUFxQixHQUFHLGdCQUFnQixDQUFDO1FBQ3pDLFlBQU8sR0FBRyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUM7SUFFOEIsQ0FBQztJQUUzRCxJQUFJLE1BQU07UUFDUixNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsR0FBRyxJQUFJLENBQUMsYUFBYSxDQUFDO1FBQ2hELE9BQU8sU0FBUyxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ2hELENBQUM7SUFFTSxNQUFNLENBQUMsTUFBYTtRQUN6QixJQUFJLEVBQUUsSUFBSSxFQUFFLEdBQXFCLE1BQU0sQ0FBQyxNQUFNLENBQUM7UUFFL0MsSUFBSSxDQUFDLGFBQWEsQ0FBQyxVQUFVLENBQUMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQzFDLENBQUM7SUFFRCxlQUFlO1FBQ2IsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksS0FBSyxVQUFVLENBQUM7SUFDNUMsQ0FBQztJQUVELFlBQVk7UUFDVixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxLQUFLLEtBQUssQ0FBQztJQUN2QyxDQUFDO0lBRUQsUUFBUTs7UUFDTixPQUFPLE9BQUEsSUFBSSxDQUFDLE1BQU0sMENBQUUsTUFBTSxJQUFHLENBQUMsQ0FBQztJQUNqQyxDQUFDO0lBRUQsSUFBSSxlQUFlO1FBQ2pCLE9BQU8sSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7SUFDcEQsQ0FBQztJQUVELFNBQVMsQ0FBQyxNQUFjO1FBQ3RCLE9BQU8sU0FBUyxDQUFTLE1BQU0sQ0FBQyxDQUFDO0lBQ25DLENBQUM7OztZQTNDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtnQkFDOUIsaXVEQUEwQzthQUMzQzs7O1lBTFEsb0JBQW9COzs7bUJBTzFCLEtBQUs7d0JBQ0wsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIHRyYW5zbGF0ZSxcbiAgY291bnRyeURpYWxDb2RlcyxcbiAgRm9ybUZpZWxkT3B0aW9ucyxcbiAgZ2V0RXJyb3JzLFxufSBmcm9tICdAYXdzLWFtcGxpZnkvdWknO1xuaW1wb3J0IHsgbmFub2lkIH0gZnJvbSAnbmFub2lkJztcbmltcG9ydCB7IEF1dGhlbnRpY2F0b3JTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vLi4vc2VydmljZXMvYXV0aGVudGljYXRvci5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYW1wbGlmeS1mb3JtLWZpZWxkJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2Zvcm0tZmllbGQuY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBGb3JtRmllbGRDb21wb25lbnQge1xuICBASW5wdXQoKSBuYW1lOiBzdHJpbmc7IC8vIG5hbWUgb2YgdGhlIGlucHV0IGZpZWxkXG4gIEBJbnB1dCgpIGZvcm1GaWVsZDogRm9ybUZpZWxkT3B0aW9uczsgLy8gZm9ybSBmaWVsZCBvcHRpb25zIGZvciB0aGlzIGZpZWxkXG5cbiAgcHVibGljIGRlZmF1bHRDb3VudHJ5Q29kZVZhbHVlOiBzdHJpbmc7XG4gIHB1YmxpYyBjb3VudHJ5RGlhbENvZGVzVmFsdWUgPSBjb3VudHJ5RGlhbENvZGVzO1xuICBwdWJsaWMgZXJyb3JJZCA9IG5hbm9pZCgxMik7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBhdXRoZW50aWNhdG9yOiBBdXRoZW50aWNhdG9yU2VydmljZSkge31cblxuICBnZXQgZXJyb3JzKCk6IHN0cmluZ1tdIHtcbiAgICBjb25zdCB7IHZhbGlkYXRpb25FcnJvcnMgfSA9IHRoaXMuYXV0aGVudGljYXRvcjtcbiAgICByZXR1cm4gZ2V0RXJyb3JzKHZhbGlkYXRpb25FcnJvcnNbdGhpcy5uYW1lXSk7XG4gIH1cblxuICBwdWJsaWMgb25CbHVyKCRldmVudDogRXZlbnQpIHtcbiAgICBsZXQgeyBuYW1lIH0gPSA8SFRNTElucHV0RWxlbWVudD4kZXZlbnQudGFyZ2V0O1xuXG4gICAgdGhpcy5hdXRoZW50aWNhdG9yLnVwZGF0ZUJsdXIoeyBuYW1lIH0pO1xuICB9XG5cbiAgaXNQYXNzd29yZEZpZWxkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmZvcm1GaWVsZC50eXBlID09PSAncGFzc3dvcmQnO1xuICB9XG5cbiAgaXNQaG9uZUZpZWxkKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmZvcm1GaWVsZC50eXBlID09PSAndGVsJztcbiAgfVxuXG4gIGhhc0Vycm9yKCk6IGJvb2xlYW4ge1xuICAgIHJldHVybiB0aGlzLmVycm9ycz8ubGVuZ3RoID4gMDtcbiAgfVxuXG4gIGdldCBhcmlhRGVzY3JpYmVkQnkoKSB7XG4gICAgcmV0dXJuIHRoaXMuaGFzRXJyb3IoKSA/IHRoaXMuZXJyb3JJZCA6IHVuZGVmaW5lZDtcbiAgfVxuXG4gIHRyYW5zbGF0ZShwaHJhc2U6IHN0cmluZyk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHRyYW5zbGF0ZTxzdHJpbmc+KHBocmFzZSk7XG4gIH1cbn1cbiJdfQ==