import { Component, HostBinding, Input } from '@angular/core';
import { AuthenticatorService } from '../../../../services/authenticator.service';
import { getFormDataFromEvent, hasTranslation, translate, } from '@aws-amplify/ui';
export class ConfirmResetPasswordComponent {
    constructor(authenticator) {
        this.authenticator = authenticator;
        this.dataAttr = '';
        this.headerText = translate('Reset your password');
        // translated strings
        this.backToSignInText = translate('Back to Sign In');
        this.resendCodeText = translate('Resend Code');
        /**
         * Support backwards compatibility for erroneous 'Send Code' text
         * See https://github.com/aws-amplify/amplify-ui/issues/1784
         * TODO: Remove support for 'Send Code' translation in next Major release
         */
        this.submitText = !hasTranslation('Send Code')
            ? translate('Submit')
            : translate('Send Code');
    }
    get context() {
        return this.authenticator.slotContext;
    }
    onInput(event) {
        event.preventDefault();
        const { name, value } = event.target;
        this.authenticator.updateForm({ name, value });
    }
    onSubmit(event) {
        event.preventDefault();
        this.authenticator.submitForm(getFormDataFromEvent(event));
    }
}
ConfirmResetPasswordComponent.decorators = [
    { type: Component, args: [{
                selector: 'amplify-confirm-reset-password',
                template: "<form data-amplify-form (submit)=\"onSubmit($event)\" (input)=\"onInput($event)\">\n  <fieldset\n    class=\"amplify-flex amplify-authenticator__column\"\n    data-amplify-fieldset\n    [disabled]=\"authenticator.isPending\"\n  >\n    <amplify-slot name=\"confirm-reset-password-header\" [context]=\"context\">\n      <h3 class=\"amplify-heading amplify-heading--3\">{{ headerText }}</h3>\n    </amplify-slot>\n\n    <amplify-base-form-fields\n      route=\"confirmResetPassword\"\n    ></amplify-base-form-fields>\n\n    <button\n      amplify-button\n      variation=\"primary\"\n      fullWidth=\"true\"\n      type=\"submit\"\n      [isDisabled]=\"authenticator.isPending\"\n    >\n      {{ submitText }}\n    </button>\n\n    <button\n      amplify-button\n      size=\"small\"\n      variation=\"link\"\n      fontWeight=\"normal\"\n      fullWidth=\"true\"\n      type=\"button\"\n      (click)=\"authenticator.resendCode()\"\n    >\n      {{ resendCodeText }}\n    </button>\n\n    <amplify-error *ngIf=\"authenticator.error\">\n      {{ authenticator.error }}\n    </amplify-error>\n  </fieldset>\n  <amplify-slot name=\"confirm-reset-password-footer\" [context]=\"context\">\n  </amplify-slot>\n</form>\n"
            },] }
];
ConfirmResetPasswordComponent.ctorParameters = () => [
    { type: AuthenticatorService }
];
ConfirmResetPasswordComponent.propDecorators = {
    dataAttr: [{ type: HostBinding, args: ['attr.data-amplify-authenticator-confirmsignin',] }],
    headerText: [{ type: Input }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1wbGlmeS1jb25maXJtLXJlc2V0LXBhc3N3b3JkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpLWFuZ3VsYXIvc3JjL2xpYi9jb21wb25lbnRzL2F1dGhlbnRpY2F0b3IvY29tcG9uZW50cy9jb25maXJtLXJlc2V0LXBhc3N3b3JkL2FtcGxpZnktY29uZmlybS1yZXNldC1wYXNzd29yZC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ3RFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDRDQUE0QyxDQUFDO0FBQ2xGLE9BQU8sRUFFTCxvQkFBb0IsRUFDcEIsY0FBYyxFQUNkLFNBQVMsR0FDVixNQUFNLGlCQUFpQixDQUFDO0FBTXpCLE1BQU0sT0FBTyw2QkFBNkI7SUFpQnhDLFlBQW1CLGFBQW1DO1FBQW5DLGtCQUFhLEdBQWIsYUFBYSxDQUFzQjtRQWhCUSxhQUFRLEdBQUcsRUFBRSxDQUFDO1FBQzVELGVBQVUsR0FBRyxTQUFTLENBQUMscUJBQXFCLENBQUMsQ0FBQztRQUU5RCxxQkFBcUI7UUFDZCxxQkFBZ0IsR0FBRyxTQUFTLENBQUMsaUJBQWlCLENBQUMsQ0FBQztRQUNoRCxtQkFBYyxHQUFHLFNBQVMsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUVqRDs7OztXQUlHO1FBQ0ksZUFBVSxHQUFHLENBQUMsY0FBYyxDQUFDLFdBQVcsQ0FBQztZQUM5QyxDQUFDLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQztZQUNyQixDQUFDLENBQUMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBRThCLENBQUM7SUFFMUQsSUFBVyxPQUFPO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUM7SUFDeEMsQ0FBQztJQUVELE9BQU8sQ0FBQyxLQUFZO1FBQ2xCLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixNQUFNLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxHQUFxQixLQUFLLENBQUMsTUFBTSxDQUFDO1FBQ3ZELElBQUksQ0FBQyxhQUFhLENBQUMsVUFBVSxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxDQUFDLENBQUM7SUFDakQsQ0FBQztJQUVELFFBQVEsQ0FBQyxLQUFZO1FBQ25CLEtBQUssQ0FBQyxjQUFjLEVBQUUsQ0FBQztRQUN2QixJQUFJLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBQyxvQkFBb0IsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQzdELENBQUM7OztZQXBDRixTQUFTLFNBQUM7Z0JBQ1QsUUFBUSxFQUFFLGdDQUFnQztnQkFDMUMsMHNDQUE4RDthQUMvRDs7O1lBWFEsb0JBQW9COzs7dUJBYTFCLFdBQVcsU0FBQywrQ0FBK0M7eUJBQzNELEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3RCaW5kaW5nLCBJbnB1dCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBdXRoZW50aWNhdG9yU2VydmljZSB9IGZyb20gJy4uLy4uLy4uLy4uL3NlcnZpY2VzL2F1dGhlbnRpY2F0b3Iuc2VydmljZSc7XG5pbXBvcnQge1xuICBGb3JtRmllbGRzQXJyYXksXG4gIGdldEZvcm1EYXRhRnJvbUV2ZW50LFxuICBoYXNUcmFuc2xhdGlvbixcbiAgdHJhbnNsYXRlLFxufSBmcm9tICdAYXdzLWFtcGxpZnkvdWknO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdhbXBsaWZ5LWNvbmZpcm0tcmVzZXQtcGFzc3dvcmQnLFxuICB0ZW1wbGF0ZVVybDogJy4vYW1wbGlmeS1jb25maXJtLXJlc2V0LXBhc3N3b3JkLmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgQ29uZmlybVJlc2V0UGFzc3dvcmRDb21wb25lbnQge1xuICBASG9zdEJpbmRpbmcoJ2F0dHIuZGF0YS1hbXBsaWZ5LWF1dGhlbnRpY2F0b3ItY29uZmlybXNpZ25pbicpIGRhdGFBdHRyID0gJyc7XG4gIEBJbnB1dCgpIHB1YmxpYyBoZWFkZXJUZXh0ID0gdHJhbnNsYXRlKCdSZXNldCB5b3VyIHBhc3N3b3JkJyk7XG5cbiAgLy8gdHJhbnNsYXRlZCBzdHJpbmdzXG4gIHB1YmxpYyBiYWNrVG9TaWduSW5UZXh0ID0gdHJhbnNsYXRlKCdCYWNrIHRvIFNpZ24gSW4nKTtcbiAgcHVibGljIHJlc2VuZENvZGVUZXh0ID0gdHJhbnNsYXRlKCdSZXNlbmQgQ29kZScpO1xuICBwdWJsaWMgc29ydGVkRm9ybUZpZWxkczogRm9ybUZpZWxkc0FycmF5O1xuICAvKipcbiAgICogU3VwcG9ydCBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eSBmb3IgZXJyb25lb3VzICdTZW5kIENvZGUnIHRleHRcbiAgICogU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9hd3MtYW1wbGlmeS9hbXBsaWZ5LXVpL2lzc3Vlcy8xNzg0XG4gICAqIFRPRE86IFJlbW92ZSBzdXBwb3J0IGZvciAnU2VuZCBDb2RlJyB0cmFuc2xhdGlvbiBpbiBuZXh0IE1ham9yIHJlbGVhc2VcbiAgICovXG4gIHB1YmxpYyBzdWJtaXRUZXh0ID0gIWhhc1RyYW5zbGF0aW9uKCdTZW5kIENvZGUnKVxuICAgID8gdHJhbnNsYXRlKCdTdWJtaXQnKVxuICAgIDogdHJhbnNsYXRlKCdTZW5kIENvZGUnKTtcblxuICBjb25zdHJ1Y3RvcihwdWJsaWMgYXV0aGVudGljYXRvcjogQXV0aGVudGljYXRvclNlcnZpY2UpIHt9XG5cbiAgcHVibGljIGdldCBjb250ZXh0KCkge1xuICAgIHJldHVybiB0aGlzLmF1dGhlbnRpY2F0b3Iuc2xvdENvbnRleHQ7XG4gIH1cblxuICBvbklucHV0KGV2ZW50OiBFdmVudCkge1xuICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgY29uc3QgeyBuYW1lLCB2YWx1ZSB9ID0gPEhUTUxJbnB1dEVsZW1lbnQ+ZXZlbnQudGFyZ2V0O1xuICAgIHRoaXMuYXV0aGVudGljYXRvci51cGRhdGVGb3JtKHsgbmFtZSwgdmFsdWUgfSk7XG4gIH1cblxuICBvblN1Ym1pdChldmVudDogRXZlbnQpOiB2b2lkIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRoaXMuYXV0aGVudGljYXRvci5zdWJtaXRGb3JtKGdldEZvcm1EYXRhRnJvbUV2ZW50KGV2ZW50KSk7XG4gIH1cbn1cbiJdfQ==