import { Component, HostBinding, Input, } from '@angular/core';
import { CustomComponentsService } from '../../services/custom-components.service';
export class AmplifySlotComponent {
    constructor(propService) {
        this.propService = propService;
        this.display = 'contents';
        this.isOverriden = false;
    }
    ngAfterContentInit() {
        const customComponents = this.propService.customComponents;
        const overridingComponent = customComponents[this.name];
        if (overridingComponent) {
            this.overridingComponent = overridingComponent;
            this.isOverriden = true;
        }
    }
}
AmplifySlotComponent.decorators = [
    { type: Component, args: [{
                selector: 'amplify-slot',
                template: "<!-- \n  if slot isn't overwritten, we display the the default coponent, which is the \n  children passed onto this component.\n-->\n<ng-content *ngIf=\"!isOverriden\"></ng-content>\n\n<!-- If slot is overwritten, we render that instead. -->\n<ng-container\n  *ngIf=\"isOverriden\"\n  [ngTemplateOutlet]=\"overridingComponent\"\n  [ngTemplateOutletContext]=\"context\"\n></ng-container>\n"
            },] }
];
AmplifySlotComponent.ctorParameters = () => [
    { type: CustomComponentsService }
];
AmplifySlotComponent.propDecorators = {
    name: [{ type: Input }],
    context: [{ type: Input }],
    display: [{ type: HostBinding, args: ['style.display',] }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW1wbGlmeS1zbG90LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3VpLWFuZ3VsYXIvc3JjL2xpYi91dGlsaXRpZXMvYW1wbGlmeS1zbG90L2FtcGxpZnktc2xvdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUVMLFNBQVMsRUFDVCxXQUFXLEVBQ1gsS0FBSyxHQUVOLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBTW5GLE1BQU0sT0FBTyxvQkFBb0I7SUFTL0IsWUFBb0IsV0FBb0M7UUFBcEMsZ0JBQVcsR0FBWCxXQUFXLENBQXlCO1FBTDFCLFlBQU8sR0FBRyxVQUFVLENBQUM7UUFHNUMsZ0JBQVcsR0FBWSxLQUFLLENBQUM7SUFFdUIsQ0FBQztJQUU1RCxrQkFBa0I7UUFDaEIsTUFBTSxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDLGdCQUFnQixDQUFDO1FBQzNELE1BQU0sbUJBQW1CLEdBQUcsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRXhELElBQUksbUJBQW1CLEVBQUU7WUFDdkIsSUFBSSxDQUFDLG1CQUFtQixHQUFHLG1CQUFtQixDQUFDO1lBQy9DLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDO1NBQ3pCO0lBQ0gsQ0FBQzs7O1lBdkJGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsY0FBYztnQkFDeEIsZ1pBQTRDO2FBQzdDOzs7WUFMUSx1QkFBdUI7OzttQkFPN0IsS0FBSztzQkFDTCxLQUFLO3NCQUVMLFdBQVcsU0FBQyxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQWZ0ZXJDb250ZW50SW5pdCxcbiAgQ29tcG9uZW50LFxuICBIb3N0QmluZGluZyxcbiAgSW5wdXQsXG4gIFRlbXBsYXRlUmVmLFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEN1c3RvbUNvbXBvbmVudHNTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZXMvY3VzdG9tLWNvbXBvbmVudHMuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2FtcGxpZnktc2xvdCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9hbXBsaWZ5LXNsb3QuY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBBbXBsaWZ5U2xvdENvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyQ29udGVudEluaXQge1xuICBASW5wdXQoKSBuYW1lOiBzdHJpbmc7XG4gIEBJbnB1dCgpIGNvbnRleHQ6IFJlY29yZDxQcm9wZXJ0eUtleSwgYW55PjtcblxuICBASG9zdEJpbmRpbmcoJ3N0eWxlLmRpc3BsYXknKSBkaXNwbGF5ID0gJ2NvbnRlbnRzJztcblxuICBwdWJsaWMgb3ZlcnJpZGluZ0NvbXBvbmVudDogVGVtcGxhdGVSZWY8YW55PjtcbiAgcHVibGljIGlzT3ZlcnJpZGVuOiBib29sZWFuID0gZmFsc2U7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBwcm9wU2VydmljZTogQ3VzdG9tQ29tcG9uZW50c1NlcnZpY2UpIHt9XG5cbiAgbmdBZnRlckNvbnRlbnRJbml0KCk6IHZvaWQge1xuICAgIGNvbnN0IGN1c3RvbUNvbXBvbmVudHMgPSB0aGlzLnByb3BTZXJ2aWNlLmN1c3RvbUNvbXBvbmVudHM7XG4gICAgY29uc3Qgb3ZlcnJpZGluZ0NvbXBvbmVudCA9IGN1c3RvbUNvbXBvbmVudHNbdGhpcy5uYW1lXTtcblxuICAgIGlmIChvdmVycmlkaW5nQ29tcG9uZW50KSB7XG4gICAgICB0aGlzLm92ZXJyaWRpbmdDb21wb25lbnQgPSBvdmVycmlkaW5nQ29tcG9uZW50O1xuICAgICAgdGhpcy5pc092ZXJyaWRlbiA9IHRydWU7XG4gICAgfVxuICB9XG59XG4iXX0=